{"version":3,"file":"simple-column.js","names":["SimpleColumn","name","attributeName","columnName","type","accessor","join","sql","index","object","_type","_name","_attributeName","_columnName","_accessor","defaultAccessor","_sql","_index","_join","Join","valueFrom","exportValue","options","split","Column"],"sources":["../../src/schema/simple-column.js"],"sourcesContent":["import Column from './column';\nimport Join from './join';\n\nexport default class SimpleColumn extends Column {\n  constructor({name, attributeName, columnName, type = null, accessor = null, join = null, sql = null, index}) {\n    super();\n\n    this._type = type || 'string';\n    this._name = name;\n    this._attributeName = attributeName;\n    this._columnName = columnName;\n    this._accessor = accessor || this.defaultAccessor;\n    this._sql = !!sql;\n    this._index = index;\n\n    if (join) {\n      this._join = new Join(join);\n    }\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get id() {\n    if (this._sql) {\n      // The double underscore is the marker for an internal column id\n      return `__${this._index}:${this._columnName}`;\n    }\n    return this._columnName;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get join() {\n    return this._join;\n  }\n\n  get source() {\n    if (this.join) {\n      return this._columnName.split('.')[0];\n    }\n\n    return null;\n  }\n\n  get joinedColumnName() {\n    return this.columnName;\n  }\n\n  get columnName() {\n    if (this.join) {\n      return this._columnName.split('.')[1];\n    }\n\n    return this._columnName;\n  }\n\n  get attributeName() {\n    return this._attributeName;\n  }\n\n  defaultAccessor = (object) => {\n    return object[this.attributeName];\n  }\n\n  valueFrom(object) {\n    return this._accessor(object);\n  }\n\n  exportValue(object, options = {}) {\n    return this._accessor(object, options);\n  }\n\n  get isSQL() {\n    return this._sql;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAELA,YAAY;EAAA;EAC/B,4BAA6G;IAAA;IAAA,IAAhGC,IAAI,QAAJA,IAAI;MAAEC,aAAa,QAAbA,aAAa;MAAEC,UAAU,QAAVA,UAAU;MAAA,iBAAEC,IAAI;MAAJA,IAAI,0BAAG,IAAI;MAAA,qBAAEC,QAAQ;MAARA,QAAQ,8BAAG,IAAI;MAAA,iBAAEC,IAAI;MAAJA,IAAI,0BAAG,IAAI;MAAA,gBAAEC,GAAG;MAAHA,GAAG,yBAAG,IAAI;MAAEC,KAAK,QAALA,KAAK;IACxG,0BAAO;IAAC,kEA2DQ,UAACC,MAAM,EAAK;MAC5B,OAAOA,MAAM,CAAC,MAAKP,aAAa,CAAC;IACnC,CAAC;IA3DC,MAAKQ,KAAK,GAAGN,IAAI,IAAI,QAAQ;IAC7B,MAAKO,KAAK,GAAGV,IAAI;IACjB,MAAKW,cAAc,GAAGV,aAAa;IACnC,MAAKW,WAAW,GAAGV,UAAU;IAC7B,MAAKW,SAAS,GAAGT,QAAQ,IAAI,MAAKU,eAAe;IACjD,MAAKC,IAAI,GAAG,CAAC,CAACT,GAAG;IACjB,MAAKU,MAAM,GAAGT,KAAK;IAEnB,IAAIF,IAAI,EAAE;MACR,MAAKY,KAAK,GAAG,IAAIC,gBAAI,CAACb,IAAI,CAAC;IAC7B;IAAC;EACH;EAAC;EAAA,OAkDDc,SAAS,GAAT,mBAAUX,MAAM,EAAE;IAChB,OAAO,IAAI,CAACK,SAAS,CAACL,MAAM,CAAC;EAC/B,CAAC;EAAA,OAEDY,WAAW,GAAX,qBAAYZ,MAAM,EAAEa,OAAO,EAAO;IAAA,IAAdA,OAAO;MAAPA,OAAO,GAAG,CAAC,CAAC;IAAA;IAC9B,OAAO,IAAI,CAACR,SAAS,CAACL,MAAM,EAAEa,OAAO,CAAC;EACxC,CAAC;EAAA;IAAA;IAAA,KAtDD,eAAW;MACT,OAAO,IAAI,CAACZ,KAAK;IACnB;EAAC;IAAA;IAAA,KAED,eAAS;MACP,IAAI,IAAI,CAACM,IAAI,EAAE;QACb;QACA,cAAY,IAAI,CAACC,MAAM,SAAI,IAAI,CAACJ,WAAW;MAC7C;MACA,OAAO,IAAI,CAACA,WAAW;IACzB;EAAC;IAAA;IAAA,KAED,eAAW;MACT,OAAO,IAAI,CAACF,KAAK;IACnB;EAAC;IAAA;IAAA,KAED,eAAW;MACT,OAAO,IAAI,CAACO,KAAK;IACnB;EAAC;IAAA;IAAA,KAED,eAAa;MACX,IAAI,IAAI,CAACZ,IAAI,EAAE;QACb,OAAO,IAAI,CAACO,WAAW,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC;MAEA,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,KAED,eAAuB;MACrB,OAAO,IAAI,CAACpB,UAAU;IACxB;EAAC;IAAA;IAAA,KAED,eAAiB;MACf,IAAI,IAAI,CAACG,IAAI,EAAE;QACb,OAAO,IAAI,CAACO,WAAW,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC;MAEA,OAAO,IAAI,CAACV,WAAW;IACzB;EAAC;IAAA;IAAA,KAED,eAAoB;MAClB,OAAO,IAAI,CAACD,cAAc;IAC5B;EAAC;IAAA;IAAA,KAcD,eAAY;MACV,OAAO,IAAI,CAACI,IAAI;IAClB;EAAC;EAAA;AAAA,EA3EuCQ,kBAAM;AAAA"}