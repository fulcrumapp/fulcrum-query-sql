{"version":3,"sources":["../src/repeatable-schema.js"],"names":["SYSTEM_COLUMNS","RepeatableSchema","formSchema","repeatable","rawColumns","fullSchema","container","_columns","_rawColumns","_rawColumnsByKey","_columnsByKey","column","indexOf","name","field","key","part","setupColumns","addSystemColumn","feature","options","recordID","record","id","parentID","parent","form","statusField","isEnabled","addRawElementColumn","_record_status","isProjectEnabled","projectColumn","tableName","alias","sourceColumn","joinColumn","isAssignmentEnabled","assignedToColumn","createdByColumn","updatedByColumn","setupElementColumns","dataName","FormFieldSchema"],"mappings":"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","sourcesContent":["import FormFieldSchema from './form-field-schema';\n\nconst SYSTEM_COLUMNS = [\n  '_child_record_id',\n  '_record_id',\n  '_parent_id',\n  '_record_project_id',\n  '_record_assigned_to_id',\n  '_record_status',\n  '_index',\n  '_latitude',\n  '_longitude',\n  '_created_at',\n  '_updated_at',\n  '_version',\n  '_created_by_id',\n  '_updated_by_id',\n  '_server_created_at',\n  '_server_updated_at',\n  '_geometry',\n  '_changeset_id',\n  '_title',\n  '_created_latitude',\n  '_created_longitude',\n  '_created_geometry',\n  '_created_altitude',\n  '_created_horizontal_accuracy',\n  '_updated_latitude',\n  '_updated_longitude',\n  '_updated_geometry',\n  '_updated_altitude',\n  '_updated_horizontal_accuracy',\n  '_created_duration',\n  '_updated_duration',\n  '_edited_duration'\n];\n\nexport default class RepeatableSchema extends FormFieldSchema {\n  constructor(formSchema, repeatable, rawColumns, {fullSchema = false}) {\n    super({fullSchema});\n\n    this.formSchema = formSchema;\n    this.repeatable = repeatable;\n    this.container = repeatable;\n\n    this._columns = [];\n    this._rawColumns = rawColumns;\n\n    this._rawColumnsByKey = {};\n    this._columnsByKey = {};\n\n    for (const column of rawColumns) {\n      if (SYSTEM_COLUMNS.indexOf(column.name) !== -1) {\n        this._rawColumnsByKey[column.name] = column;\n      } else if (column.field) {\n        const key = column.part ? column.field + '_' + column.part : column.field;\n        this._rawColumnsByKey[key] = column;\n      }\n    }\n\n    this.setupColumns();\n  }\n\n  setupColumns() {\n    if (this.fullSchema) {\n      this.addSystemColumn('Child Record ID', 'id', '_child_record_id', 'string');\n\n      this.addSystemColumn('Record ID', null, '_record_id', 'string', (feature, options) => {\n        if (feature.recordID) {\n          return feature.recordID;\n        }\n\n        return options && options.record && options.record.id;\n      });\n\n      this.addSystemColumn('Parent ID', null, '_parent_id', 'string', (feature, options) => {\n        if (feature.parentID) {\n          return feature.parentID;\n        }\n\n        return options && options.parent && options.parent.id;\n      });\n    }\n\n    if (this.formSchema.form.statusField.isEnabled) {\n      this.addRawElementColumn(this.formSchema.form.statusField,\n                               this._rawColumnsByKey._record_status,\n                               '_record_status',\n                               'string',\n                               null,\n                               '_record_status');\n    }\n\n    this.addSystemColumn('Title', 'displayValue', '_title', 'string');\n    this.addSystemColumn('Version', 'version', '_version', 'integer');\n    this.addSystemColumn('Device Created', 'createdAt', '_created_at', 'timestamp');\n    this.addSystemColumn('Device Updated', 'updatedAt', '_updated_at', 'timestamp');\n\n    if (this.formSchema.form.isProjectEnabled) {\n      this.projectColumn = this.addSystemColumn('Project',\n                                                'recordProjectName',\n                                                'record_project.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'projects',\n                                                 alias: 'record_project',\n                                                 sourceColumn: '_record_project_id',\n                                                 joinColumn: 'project_id'});\n    }\n\n    if (this.formSchema.form.isAssignmentEnabled) {\n      this.assignedToColumn = this.addSystemColumn('Assigned',\n                                                   'recordAssignedToName',\n                                                   'record_assigned_to.name',\n                                                   'string',\n                                                   null,\n                                                   {tableName: 'memberships',\n                                                    alias: 'record_assigned_to',\n                                                    sourceColumn: '_record_assigned_to_id',\n                                                    joinColumn: 'user_id'});\n    }\n\n    this.createdByColumn = this.addSystemColumn('Created By',\n                                                'createdByName',\n                                                'created_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'created_by',\n                                                 sourceColumn: '_created_by_id',\n                                                 joinColumn: 'user_id'});\n\n    this.updatedByColumn = this.addSystemColumn('Updated By',\n                                                'updatedByName',\n                                                'updated_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'updated_by',\n                                                 sourceColumn: '_updated_by_id',\n                                                 joinColumn: 'user_id'});\n\n    if (this.fullSchema) {\n      this.addSystemColumn('Item Index', 'index', '_index', 'integer');\n      this.addSystemColumn('Geometry', 'geometryAsGeoJSON', '_geometry', 'geometry');\n      this.addSystemColumn('Latitude', 'latitude', '_latitude', 'double');\n      this.addSystemColumn('Longitude', 'longitude', '_longitude', 'double');\n\n      this.addSystemColumn('Changeset', 'changesetID', '_changeset_id', 'string');\n\n      this.addSystemColumn('Created Duration', 'createdDuration', '_created_duration', 'integer');\n      this.addSystemColumn('Updated Duration', 'updatedDuration', '_updated_duration', 'integer');\n      this.addSystemColumn('Edited Duration', 'editedDuration', '_edited_duration', 'integer');\n    }\n\n    this.setupElementColumns();\n  }\n\n  get tableName() {\n    return this.formSchema.tableName + '_' + this.repeatable.dataName;\n  }\n\n  get tableNameWithoutPrefix() {\n    return this.repeatable.dataName;\n  }\n}\n"],"file":"repeatable-schema.js"}