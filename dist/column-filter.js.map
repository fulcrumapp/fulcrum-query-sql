{"version":3,"file":"column-filter.js","names":["ColumnFilter","attrs","schema","_field","field","_value","value","_schema","reset","resetIfEmpty","isEmptySet","clearValues","ensureValue","containsValue","push","toggleValue","_","without","indexOf","toJSON","hasFilter","toHumanDescription","column","name","join","isNull","length","columnForFieldKey","columnName"],"sources":["../src/column-filter.js"],"sourcesContent":["import _ from 'lodash';\n\nexport default class ColumnFilter {\n  constructor(attrs, schema) {\n    this._field = attrs.field;\n    this._value = attrs.value || null;\n    this._schema = schema;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  // when the filter is fully blank (default state) all rows are returned\n  get isNull() {\n    return this.value == null;\n  }\n\n  get hasFilter() {\n    return !this.isNull;\n  }\n\n  get hasValues() {\n    return this.value != null && this.value.length > 0;\n  }\n\n  // when the set is empty, it should always return no results\n  get isEmptySet() {\n    return this.value != null && this.value.length === 0;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  get column() {\n    return this._schema.columnForFieldKey(this.field);\n  }\n\n  get columnName() {\n    if (this.column) {\n      return this.column.columnName;\n    }\n    return null;\n  }\n\n  reset() {\n    this._value = null;\n  }\n\n  resetIfEmpty() {\n    if (this.isEmptySet) {\n      this.reset();\n    }\n  }\n\n  clearValues() {\n    this._value = [];\n  }\n\n  ensureValue(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    if (!this.containsValue(value)) {\n      this._value.push(value);\n    }\n  }\n\n  toggleValue(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    if (this.containsValue(value)) {\n      this._value = _.without(this.value, value);\n    } else {\n      this._value.push(value);\n    }\n  }\n\n  containsValue(value) {\n    if (this.value == null) {\n      return false;\n    }\n\n    return this.value.indexOf(value) > -1;\n  }\n\n  toJSON() {\n    if (!this.hasFilter) {\n      return null;\n    }\n\n    return {\n      field: this._field,\n      value: this._value\n    };\n  }\n\n  toHumanDescription() {\n    if (!this.hasFilter) {\n      return null;\n    }\n\n    return [\n      this.column ? this.column.name : this.field,\n      'one of',\n      '[' + this.value.join(', ') + ']'\n    ].join(' ');\n  }\n}\n"],"mappings":"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"}