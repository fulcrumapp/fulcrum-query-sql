{"version":3,"sources":["../src/form-schema.js"],"names":["SYSTEM_COLUMNS","FormSchema","form","rawColumns","repeatableColumns","fullSchema","container","_columns","_rawColumns","_rawColumnsByKey","_columnsByKey","column","indexOf","name","field","key","part","repeatableSchemas","repeatableSchemasByKey","repeatables","elementsOfType","repeatable","childSchema","RepeatableSchema","push","setupColumns","addSystemColumn","statusField","isEnabled","addRawElementColumn","_status","isProjectEnabled","projectColumn","tableName","alias","sourceColumn","joinColumn","isAssignmentEnabled","assignedToColumn","createdByColumn","updatedByColumn","setupElementColumns","toLowerCase","replace","FormFieldSchema"],"mappings":"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","sourcesContent":["import RepeatableSchema from './repeatable-schema';\nimport FormFieldSchema from './form-field-schema';\n\nconst SYSTEM_COLUMNS = [\n  '_record_id',\n  '_project_id',\n  '_assigned_to_id',\n  '_status',\n  '_latitude',\n  '_longitude',\n  '_created_at',\n  '_updated_at',\n  '_version',\n  '_created_by_id',\n  '_updated_by_id',\n  '_server_created_at',\n  '_server_updated_at',\n  '_geometry',\n  '_altitude',\n  '_speed',\n  '_course',\n  '_horizontal_accuracy',\n  '_vertical_accuracy',\n  '_changeset_id',\n  '_title',\n  '_created_latitude',\n  '_created_longitude',\n  '_created_geometry',\n  '_created_altitude',\n  '_created_horizontal_accuracy',\n  '_updated_latitude',\n  '_updated_longitude',\n  '_updated_geometry',\n  '_updated_altitude',\n  '_updated_horizontal_accuracy',\n  '_created_duration',\n  '_updated_duration',\n  '_edited_duration'\n];\n\nexport default class FormSchema extends FormFieldSchema {\n  constructor(form, rawColumns, repeatableColumns, {fullSchema = false}) {\n    super({fullSchema});\n\n    this.form = form;\n    this.container = form;\n\n    this._columns = [];\n    this._rawColumns = rawColumns;\n\n    this._rawColumnsByKey = {};\n    this._columnsByKey = {};\n\n    for (const column of rawColumns) {\n      if (SYSTEM_COLUMNS.indexOf(column.name) !== -1) {\n        this._rawColumnsByKey[column.name] = column;\n      } else if (column.field) {\n        const key = column.part ? column.field + '_' + column.part : column.field;\n        this._rawColumnsByKey[key] = column;\n      }\n    }\n\n    this.repeatableSchemas = [];\n    this.repeatableSchemasByKey = {};\n\n    const repeatables = this.form.elementsOfType('Repeatable');\n\n    for (const repeatable of repeatables) {\n      const childSchema = new RepeatableSchema(this, repeatable, repeatableColumns[repeatable.key], {fullSchema});\n\n      this.repeatableSchemas.push(childSchema);\n      this.repeatableSchemasByKey[repeatable.key] = childSchema;\n    }\n\n    this.setupColumns();\n  }\n\n  setupColumns() {\n    if (this.fullSchema) {\n      this.addSystemColumn('Record ID', 'id', '_record_id');\n    }\n\n    if (this.form.statusField.isEnabled) {\n      this.addRawElementColumn(this.form.statusField,\n                               this._rawColumnsByKey._status,\n                               '_status',\n                               'string',\n                               null,\n                               '_status');\n    }\n\n    this.addSystemColumn('Title', 'displayValue', '_title', 'string');\n    this.addSystemColumn('Version', 'version', '_version', 'integer');\n    this.addSystemColumn('Created', 'createdAt', '_server_created_at', 'timestamp');\n    this.addSystemColumn('Updated', 'updatedAt', '_server_updated_at', 'timestamp');\n    this.addSystemColumn('Device Created', 'clientCreatedAt', '_created_at', 'timestamp');\n    this.addSystemColumn('Device Updated', 'clientUpdatedAt', '_updated_at', 'timestamp');\n\n    if (this.form.isProjectEnabled) {\n      this.projectColumn = this.addSystemColumn('Project',\n                                                'projectName',\n                                                'project.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'projects',\n                                                 alias: 'project',\n                                                 sourceColumn: '_project_id',\n                                                 joinColumn: 'project_id'});\n    }\n\n    if (this.form.isAssignmentEnabled) {\n      this.assignedToColumn = this.addSystemColumn('Assigned',\n                                                   'assignedToName',\n                                                   'assigned_to.name',\n                                                   'string',\n                                                   null,\n                                                   {tableName: 'memberships',\n                                                    alias: 'assigned_to',\n                                                    sourceColumn: '_assigned_to_id',\n                                                    joinColumn: 'user_id'});\n    }\n\n    this.createdByColumn = this.addSystemColumn('Created By',\n                                                'createdByName',\n                                                'created_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'created_by',\n                                                 sourceColumn: '_created_by_id',\n                                                 joinColumn: 'user_id'});\n\n    this.updatedByColumn = this.addSystemColumn('Updated By',\n                                                'updatedByName',\n                                                'updated_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'updated_by',\n                                                 sourceColumn: '_updated_by_id',\n                                                 joinColumn: 'user_id'});\n\n    if (this.fullSchema) {\n      this.addSystemColumn('Geometry', 'geometryAsGeoJSON', '_geometry', 'geometry');\n      this.addSystemColumn('Latitude', 'latitude', '_latitude', 'double');\n      this.addSystemColumn('Longitude', 'longitude', '_longitude', 'double');\n\n      this.addSystemColumn('Altitude', 'altitude', '_altitude', 'double');\n      this.addSystemColumn('Accuracy', 'horizontalAccuracy', '_horizontal_accuracy', 'double');\n      this.addSystemColumn('Changeset', 'changesetID', '_changeset_id', 'string');\n\n      this.addSystemColumn('Created Duration', 'createdDuration', '_created_duration', 'integer');\n      this.addSystemColumn('Updated Duration', 'updatedDuration', '_updated_duration', 'integer');\n      this.addSystemColumn('Edited Duration', 'editedDuration', '_edited_duration', 'integer');\n    }\n\n    this.setupElementColumns();\n  }\n\n  get tableName() {\n    return this.form.name.toLowerCase().replace(/ /g, '_');\n  }\n\n  get tableNameWithoutPrefix() {\n    return this.tableName;\n  }\n}\n"],"file":"form-schema.js"}