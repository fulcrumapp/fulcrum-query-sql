{"version":3,"file":"form-schema.js","names":["SYSTEM_COLUMNS","FormSchema","form","rawColumns","repeatableColumns","fullSchema","container","_columns","_rawColumns","_rawColumnsByKey","_columnsByKey","column","indexOf","name","field","key","part","repeatableSchemas","repeatableSchemasByKey","repeatables","elementsOfType","repeatable","childSchema","RepeatableSchema","push","setupColumns","hasRecordKey","Object","values","some","item","addSystemColumn","statusField","isEnabled","addRawElementColumn","_status","isProjectEnabled","projectColumn","tableName","alias","sourceColumn","joinColumn","isAssignmentEnabled","assignedToColumn","createdByColumn","updatedByColumn","hasRecordSeriesID","expr1","AExpr","ColumnRef","expr2","BooleanTest","recordSeriesColumn","ast","BoolExpr","setupElementColumns","keys","includes","toLowerCase","replace","FormFieldSchema"],"sources":["../src/form-schema.js"],"sourcesContent":["import RepeatableSchema from './repeatable-schema';\nimport FormFieldSchema from './form-field-schema';\nimport { ColumnRef,\n  BoolExpr,\n  BooleanTest,\n  AExpr } from './ast/helpers';\n\nconst SYSTEM_COLUMNS = [\n  '_record_id',\n  '_project_id',\n  '_assigned_to_id',\n  '_status',\n  '_latitude',\n  '_longitude',\n  '_created_at',\n  '_updated_at',\n  '_version',\n  '_created_by_id',\n  '_updated_by_id',\n  '_server_created_at',\n  '_server_updated_at',\n  '_geometry',\n  '_altitude',\n  '_speed',\n  '_course',\n  '_horizontal_accuracy',\n  '_vertical_accuracy',\n  '_changeset_id',\n  '_title',\n  '_created_latitude',\n  '_created_longitude',\n  '_created_geometry',\n  '_created_altitude',\n  '_created_horizontal_accuracy',\n  '_updated_latitude',\n  '_updated_longitude',\n  '_updated_geometry',\n  '_updated_altitude',\n  '_updated_horizontal_accuracy',\n  '_created_duration',\n  '_updated_duration',\n  '_edited_duration',\n  '_record_series_id'\n];\n\nexport default class FormSchema extends FormFieldSchema {\n  constructor(form, rawColumns, repeatableColumns, {fullSchema = false}) {\n    super({fullSchema});\n\n    this.form = form;\n    this.container = form;\n\n    this._columns = [];\n    this._rawColumns = rawColumns;\n\n    this._rawColumnsByKey = {};\n    this._columnsByKey = {};\n\n    for (const column of rawColumns) {\n      if (SYSTEM_COLUMNS.indexOf(column.name) !== -1) {\n        this._rawColumnsByKey[column.name] = column;\n      } else if (column.field) {\n        const key = column.part ? column.field + '_' + column.part : column.field;\n        this._rawColumnsByKey[key] = column;\n      }\n    }\n\n    this.repeatableSchemas = [];\n    this.repeatableSchemasByKey = {};\n\n    const repeatables = this.form.elementsOfType('Repeatable');\n\n    for (const repeatable of repeatables) {\n      const childSchema = new RepeatableSchema(this, repeatable, repeatableColumns[repeatable.key], {fullSchema});\n\n      this.repeatableSchemas.push(childSchema);\n      this.repeatableSchemasByKey[repeatable.key] = childSchema;\n    }\n\n    this.setupColumns();\n  }\n\n  hasRecordKey() {\n    return Object.values(this._rawColumns).some((item) => item.name === '_record_key');\n  }\n\n  get hasRecordSeriesID() { // TODO: Remove once all forms have been upgraded to v4\n    return Object.keys(this._rawColumnsByKey).includes('_record_series_id');\n  }\n\n  setupColumns() {\n    if (this.fullSchema) {\n      this.addSystemColumn('Record ID', 'id', '_record_id');\n    }\n\n    if (this.form.statusField.isEnabled) {\n      this.addRawElementColumn(this.form.statusField,\n                               this._rawColumnsByKey._status,\n                               '_status',\n                               'string',\n                               null,\n                               '_status');\n    }\n\n    this.addSystemColumn('Title', 'displayValue', '_title', 'string');\n    this.addSystemColumn('Version', 'version', '_version', 'integer');\n    this.addSystemColumn('Created', 'createdAt', '_server_created_at', 'timestamp');\n    this.addSystemColumn('Updated', 'updatedAt', '_server_updated_at', 'timestamp');\n    this.addSystemColumn('Device Created', 'clientCreatedAt', '_created_at', 'timestamp');\n    this.addSystemColumn('Device Updated', 'clientUpdatedAt', '_updated_at', 'timestamp');\n\n    if (this.form.isProjectEnabled) {\n      this.projectColumn = this.addSystemColumn('Project',\n                                                'projectName',\n                                                'project.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'projects',\n                                                 alias: 'project',\n                                                 sourceColumn: '_project_id',\n                                                 joinColumn: 'project_id'});\n    }\n\n    if (this.form.isAssignmentEnabled) {\n      this.assignedToColumn = this.addSystemColumn('Assigned',\n                                                   'assignedToName',\n                                                   'assigned_to.name',\n                                                   'string',\n                                                   null,\n                                                   {tableName: 'memberships',\n                                                    alias: 'assigned_to',\n                                                    sourceColumn: '_assigned_to_id',\n                                                    joinColumn: 'user_id'});\n    }\n\n    this.createdByColumn = this.addSystemColumn('Created By',\n                                                'createdByName',\n                                                'created_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'created_by',\n                                                 sourceColumn: '_created_by_id',\n                                                 joinColumn: 'user_id'});\n\n    this.updatedByColumn = this.addSystemColumn('Updated By',\n                                                'updatedByName',\n                                                'updated_by.name',\n                                                'string',\n                                                null,\n                                                {tableName: 'memberships',\n                                                 alias: 'updated_by',\n                                                 sourceColumn: '_updated_by_id',\n                                                 joinColumn: 'user_id'});\n\n    if (this.hasRecordSeriesID) {\n      const expr1 = AExpr(0, '=', ColumnRef('_record_series_id', 'records'), ColumnRef('record_series_id', 'record_series'));\n      const expr2 = BooleanTest(ColumnRef('enabled', 'record_series'), 0);\n      this.recordSeriesColumn = this.addSystemColumn('Record Series',\n                                                  'recordSeries',\n                                                  'record_series.rrule',\n                                                  'string',\n                                                  null,\n                                                  {tableName: 'record_series',\n                                                   alias: 'record_series',\n                                                   ast: BoolExpr(0, [ expr1, expr2, ])});\n    };\n\n    if (this.fullSchema) {\n      this.addSystemColumn('Geometry', 'geometryAsGeoJSON', '_geometry', 'geometry');\n      this.addSystemColumn('Latitude', 'latitude', '_latitude', 'double');\n      this.addSystemColumn('Longitude', 'longitude', '_longitude', 'double');\n\n      this.addSystemColumn('Altitude', 'altitude', '_altitude', 'double');\n      this.addSystemColumn('Accuracy', 'horizontalAccuracy', '_horizontal_accuracy', 'double');\n      this.addSystemColumn('Changeset', 'changesetID', '_changeset_id', 'string');\n\n      this.addSystemColumn('Created Duration', 'createdDuration', '_created_duration', 'integer');\n      this.addSystemColumn('Updated Duration', 'updatedDuration', '_updated_duration', 'integer');\n      this.addSystemColumn('Edited Duration', 'editedDuration', '_edited_duration', 'integer');\n    }\n\n    if (this.hasRecordKey()) {\n      this.addSystemColumn('Record Key', 'recordKey', '_record_key', 'string');\n      this.addSystemColumn('Record Sequence', 'recordSequence', '_record_sequence', 'integer');\n    }\n\n    this.setupElementColumns();\n  }\n\n  get tableName() {\n    return this.form.name.toLowerCase().replace(/ /g, '_');\n  }\n\n  get tableNameWithoutPrefix() {\n    return this.tableName;\n  }\n}\n"],"mappings":"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"}