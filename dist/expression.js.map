{"version":3,"file":"expression.js","sourceRoot":"","sources":["../src/expression.js"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nimport { availableOperatorsForColumn, isValueRequired, isDateOperator, OperatorsByValue } from './operator';\nimport QueryOptions from './query-options';\n\nexport class Expression {\n  constructor(attrs, schema) {\n    attrs = attrs || {};\n\n    this._field = attrs.field || null;\n    this._operator = attrs.operator || null;\n    this._value = attrs.value || null;\n    this._options = new QueryOptions(attrs.options || {});\n    this._schema = schema;\n  }\n\n  get isValid() {\n    if (!isValueRequired(this.operator)) {\n      return this.column != null && this.operator != null;\n    }\n\n    return this.column != null && this.operator != null && this.hasValue;\n  }\n\n  get supportsValue() {\n    return isValueRequired(this.operator);\n  }\n\n  get hasValue() {\n    return this.value !== null && this.value.length !== 0;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get arrayValue() {\n    if (this.hasValue) {\n      return Array.isArray(this.value[0]) ? this.value[0] : this.value;\n    }\n\n    return null;\n  }\n\n  get scalarValue() {\n    if (this.hasValue) {\n      return this.value[0];\n    }\n\n    return null;\n  }\n\n  set scalarValue(value) {\n    this._value = value ? [ value ] : null;\n  }\n\n  get value1() {\n    return this.value && this.value[0];\n  }\n\n  set value1(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ value, this.value[1] ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get value2() {\n    return this.value && this.value[1];\n  }\n\n  set value2(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ this.value[0], value ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get isDateOperator() {\n    return isDateOperator(this.operator);\n  }\n\n  get operator() {\n    return this._operator;\n  }\n\n  set operator(operator) {\n    this._operator = operator;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  set field(field) {\n    this._field = field;\n  }\n\n  get column() {\n    return this._schema.columnForFieldKey(this.field);\n  }\n\n  set column(column) {\n    this._field = column ? column.id : null;\n\n    // if the change in the field results in the operator not being valid, clear the operator\n    if (this._operator && this.availableOperators().find(o => o.name === this._operator) === -1) {\n      this._operator = null;\n    }\n  }\n\n  get columnName() {\n    if (this.column) {\n      return this.column.columnName;\n    }\n    return null;\n  }\n\n  toggleValue(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    if (this.containsValue(value)) {\n      const newValues = [];\n\n      for (const selectedValue of this.value) {\n        if (JSON.stringify(selectedValue) !== JSON.stringify(value)) {\n          newValues.push(selectedValue);\n        }\n      }\n\n      this._value = newValues;\n    } else {\n      this._value.push(value);\n    }\n  }\n\n  containsValue(value) {\n    if (this.value == null) {\n      return false;\n    }\n\n    return this.value.map(JSON.stringify).indexOf(JSON.stringify(value)) > -1;\n  }\n\n  toJSON() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return {\n      field: this._field,\n      operator: this._operator,\n      value: this._value\n    };\n  }\n\n  isEqual(other) {\n    if (other == null || !(other instanceof Expression)) {\n      return false;\n    }\n\n    return this.field === other.field &&\n           this.operator === other.operator &&\n           JSON.stringify(this.value) === JSON.stringify(other.value);\n  }\n\n  availableOperators() {\n    return availableOperatorsForColumn(this.column);\n  }\n\n  get startDate() {\n    return this._value && this._value[0];\n  }\n\n  set startDate(date) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ date && date.startOf('day').format('YYYY-MM-DD HH:mm:ss'), this.value[1] ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get endDate() {\n    return this._value && this._value[1];\n  }\n\n  set endDate(date) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ this.value[0], date && date.endOf('day').format('YYYY-MM-DD HH:mm:ss') ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this._options = options;\n  }\n\n  clearRangeValuesIfNull() {\n    // if both values are null, clear it, don't allow [ null, null ]\n    if (this._value[0] == null && this._value[1] == null) {\n      this._value = null;\n    }\n  }\n\n  labelForValue(value, {separator} = {}) {\n    const column = this.column;\n\n    if (!column) {\n      return value;\n    }\n\n    const element = this.column.element;\n\n    if (element) {\n      if (element.isStatusElement) {\n        const choice = element.statusForValue(value);\n\n        if (choice) {\n          return choice.label;\n        }\n      } else if (element.isChoiceElement) {\n        const choice = element.choiceByValue(value);\n\n        if (choice) {\n          return choice.label;\n        }\n      }\n    }\n\n    return Array.isArray(value) ? value.join(separator != null ? separator : ', ')\n                                : value && value.toString();\n  }\n\n  toHumanDescription() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const parts = [\n      this.column ? this.column.name : this.columnName,\n      OperatorsByValue[this.operator].label\n    ];\n\n    if (this.supportsValue) {\n      if (this.value.length === 1) {\n        parts.push(this.value.join(', '));\n      } else {\n        parts.push('[' + this.value.join(', ') + ']');\n      }\n    }\n\n    return parts.join(' ');\n  }\n}\n"]}