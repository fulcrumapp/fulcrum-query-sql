{"version":3,"file":"query.js","names":["Query","attrs","_ast","ast","_form","form","_repeatableKey","repeatableKey","_schema","schema","_filter","Condition","filter","_sorting","SortExpressions","sorting","_boundingBox","bounding_box","_searchFilter","search_filter","_dateFilter","Expression","date_filter","field","defaultDateField","_options","QueryOptions","options","_columnSettings","ColumnSettings","columns","_statusFilter","ColumnFilter","status_filter","_projectFilter","project_filter","_assignmentFilter","assignment_filter","_changesetFilter","changeset_filter","_full","full","setup","clearAllFilters","statusFilter","reset","changesetFilter","projectFilter","assignmentFilter","columnSettings","toJSON","boundingBox","searchFilter","dateFilter","toRawAST","Converter","toAST","toCountAST","toTileAST","toDistinctValuesAST","toHistogramAST","applySort","pageSize","pageIndex","outerLimit","finalLimit","AConst","IntegerValue","sortClause","outerSortClause","fromClause","runtimeFilters","SelectStmt","targetList","limitCount","deparse","Deparse","toSchemaAST","toDistinctValuesSQL","toHistogramSQL","toCountSQL","toSQL","toTileSQL","toSummarySQL","columnSetting","toSummaryAST","ResTarget","ColumnRef","AStar","_","compact","enabledColumns","map","column","element","rawColumn","columnAlias","columnName","join","alias","source","timeZoneCast","columnRef","FuncCall","StringValue","timeZoneFormat","recordKeyColumns","joinedColumns","subJoinColumns","joinColumnsWithSorting","_rawColumns","name","push","createdByColumn","indexOf","updatedByColumn","assignedToColumn","projectColumn","recordSeriesColumn","TypeCast","TypeName","id","sort","baseQuery","RangeSubselect","Alias","joinClause","toHumanDescription","parts","description","o","desc","geometryColumns","length","geometryColumn","duplicateResTargetWithExactName","hasFilter","find","isValid","expressions","hasSort","joins","apply","allExpressions","joinColumns","box","isEmpty","systemSortClause","sorts","direction","SortBy","flatten"],"sources":["../src/query.js"],"sourcesContent":["import { Condition } from './condition';\nimport { Expression } from './expression';\nimport SortExpressions from './sort-expressions';\nimport Converter from './ast/converter';\nimport ColumnFilter from './column-filter';\nimport Deparse from 'pg-query-deparser';\nimport QueryOptions from './query-options';\nimport _ from 'lodash';\nimport ColumnSettings from './column-settings';\n\nimport { ResTarget,\n         ColumnRef,\n         FuncCall,\n         AConst,\n         StringValue,\n         TypeCast,\n         TypeName,\n         Alias,\n         RangeSubselect,\n         SelectStmt,\n         SortBy,\n         IntegerValue,\n         AStar } from './ast/helpers';\n\nexport default class Query {\n  constructor(attrs) {\n    this._ast = attrs.ast;\n    this._form = attrs.form;\n    this._repeatableKey = attrs.repeatableKey;\n    this._schema = attrs.schema;\n    this._filter = new Condition(attrs.filter, attrs.schema);\n    this._sorting = new SortExpressions(attrs.sorting, attrs.schema);\n    this._boundingBox = attrs.bounding_box || null;\n    this._searchFilter = attrs.search_filter;\n    this._dateFilter = new Expression(attrs.date_filter || {field: this.defaultDateField}, attrs.schema);\n    this._options = new QueryOptions(attrs.options || {});\n    this._columnSettings = new ColumnSettings(this._schema, attrs.columns);\n    this._statusFilter = new ColumnFilter({...attrs.status_filter, field: attrs.repeatableKey ? '_record_status' : '_status'}, this._schema);\n    this._projectFilter = new ColumnFilter({...attrs.project_filter, field: attrs.repeatableKey ? 'record_project.name' : 'project.name'}, this._schema);\n    this._assignmentFilter = new ColumnFilter({...attrs.assignment_filter, field: attrs.repeatableKey ? 'record_assigned_to.name' : 'assigned_to.name'}, this._schema);\n    this._changesetFilter = new ColumnFilter({...attrs.changeset_filter, field: '_changeset_id'}, this._schema);\n    this._full = attrs.full != null ? !!attrs.full : true;\n\n    this.setup();\n  }\n\n  get ast() {\n    return this._ast;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get repeatableKey() {\n    return this._repeatableKey;\n  }\n\n  get schema() {\n    return this._schema;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get sorting() {\n    return this._sorting;\n  }\n\n  get columnSettings() {\n    return this._columnSettings;\n  }\n\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  get statusFilter() {\n    return this._statusFilter;\n  }\n\n  get changesetFilter() {\n    return this._changesetFilter;\n  }\n\n  get projectFilter() {\n    return this._projectFilter;\n  }\n\n  get assignmentFilter() {\n    return this._assignmentFilter;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get full() {\n    return this._full;\n  }\n\n  get hasFilter() {\n    return this.statusFilter.hasFilter ||\n           this.projectFilter.hasFilter ||\n           this.assignmentFilter.hasFilter ||\n           this.changesetFilter.hasFilter ||\n           this.columnSettings.columns.find(o => o.hasFilter) ||\n           this.searchFilter ||\n           this.dateFilter.isValid ||\n           this.filter.expressions.find(o => o.isValid) ||\n           this.sorting.hasSort;\n  }\n\n  get joinColumns() {\n    const joins = [];\n\n    if (this.projectFilter.hasFilter) {\n      joins.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      joins.push(this.assignmentFilter.column);\n    }\n\n    joins.push.apply(joins, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter && o.column.join;\n    }).map(o => o.column));\n\n    joins.push.apply(joins, this.filter.allExpressions.filter((o) => {\n      return o.isValid && o.column.join;\n    }).map(o => o.column));\n    \n    return joins;\n  }\n\n  get referencedColumns() {\n    const columns = [];\n\n    if (this.projectFilter.hasFilter) {\n      columns.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      columns.push(this.assignmentFilter.column);\n    }\n\n    columns.push.apply(columns, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter;\n    }).map(o => o.column));\n\n    columns.push.apply(columns, this.filter.allExpressions.filter((o) => {\n      return o.isValid;\n    }).map(o => o.column));\n\n    if (this.sorting.hasSort) {\n      columns.push.apply(columns, this.sorting.expressions.filter((o) => {\n        return o.isValid;\n      }).map(o => o.column));\n    }\n\n    return columns;\n  }\n\n  get joinColumnsWithSorting() {\n    const joins = this.joinColumns;\n\n    if (this.sorting.hasSort) {\n      joins.push.apply(joins, this.sorting.expressions.filter((o) => {\n        return o.isValid && o.column.join;\n      }).map(o => o.column));\n    }\n\n    return joins;\n  }\n\n  get defaultDateField() {\n    return this.repeatableKey ? '_updated_at' : '_server_updated_at';\n  }\n\n  clearAllFilters() {\n    this.statusFilter.reset();\n    this.changesetFilter.reset();\n    this.projectFilter.reset();\n    this.assignmentFilter.reset();\n\n    this.columnSettings.reset();\n\n    this._filter = new Condition(null, this._schema);\n    this._sorting = new SortExpressions(null, this._schema);\n    // this._boundingBox = null;\n    this._searchFilter = '';\n    this._dateFilter = new Expression({field: this.defaultDateField}, this._schema);\n  }\n\n  set boundingBox(box) {\n    this._boundingBox = box;\n  }\n\n  get boundingBox() {\n    return this._boundingBox;\n  }\n\n  get searchFilter() {\n    return this._searchFilter || '';\n  }\n\n  set searchFilter(filter) {\n    this._searchFilter = filter;\n  }\n\n  get runtimeFilters() {\n    return {\n      boundingBox: this.boundingBox,\n      searchFilter: this.searchFilter,\n      dateFilter: this.dateFilter\n    };\n  }\n\n  toJSON({boundingBox = false} = {}) {\n    return {\n      filter: this.filter.toJSON(),\n      sorting: this.sorting.toJSON(),\n      options: this.options.toJSON(),\n      bounding_box: boundingBox ? this.boundingBox : null,\n      search_filter: this.searchFilter,\n      date_filter: this.dateFilter.toJSON(),\n      columns: this.columnSettings.toJSON(),\n      status_filter: this.statusFilter.toJSON(),\n      changeset_filter: this.changesetFilter.toJSON(),\n      project_filter: this.projectFilter.toJSON(),\n      assignment_filter: this.assignmentFilter.toJSON()\n    };\n  }\n\n  toRawAST(options) {\n    return new Converter().toAST(this, options);\n  }\n\n  toCountAST(options) {\n    return new Converter().toCountAST(this, options);\n  }\n\n  toTileAST(options) {\n    return new Converter().toTileAST(this, options);\n  }\n\n  toDistinctValuesAST(options) {\n    return new Converter().toDistinctValuesAST(this, options);\n  }\n\n  toHistogramAST(options) {\n    return new Converter().toHistogramAST(this, options);\n  }\n\n  toAST({applySort, pageSize, pageIndex, outerLimit}) {\n    const finalLimit = outerLimit ? AConst(IntegerValue(+outerLimit)) : null;\n\n    const sortClause = applySort ? this.outerSortClause : null;\n\n    const fromClause = this.fromClause({applySort, pageSize, pageIndex, ...this.runtimeFilters});\n\n    return SelectStmt({\n      targetList: this.targetList(),\n      fromClause: fromClause,\n      sortClause: sortClause,\n      limitCount: finalLimit,\n    });\n  }\n\n  deparse(ast) {\n    return new Deparse().deparse(ast);\n  }\n\n  toSchemaAST(ast, options) {\n    return new Converter().toSchemaAST(ast, options);\n  }\n\n  toDistinctValuesSQL(options) {\n    return this.deparse(this.toDistinctValuesAST(options));\n  }\n\n  toHistogramSQL(options) {\n    return this.deparse(this.toHistogramAST(options));\n  }\n\n  toCountSQL() {\n    return this.deparse(this.toCountAST(this.runtimeFilters));\n  }\n\n  toSQL({applySort, pageSize, pageIndex, outerLimit}) {\n    const options = {\n      applySort,\n      pageSize,\n      pageIndex,\n      outerLimit,\n      ...this.runtimeFilters\n    };\n\n    return this.deparse(this.toAST(options));\n  }\n\n  toTileSQL() {\n    return this.deparse(this.toTileAST(this.runtimeFilters));\n  }\n\n  toSummarySQL(columnSetting) {\n    const ast = new Converter().toSummaryAST(this, columnSetting, this.runtimeFilters);\n    return this.deparse(ast);\n  }\n\n  targetList() {\n    if (this.ast) {\n      return [ ResTarget(ColumnRef(AStar())) ];\n    }\n\n    if (!this.full) {\n      return _.compact(this.columnSettings.enabledColumns.map(column => {\n        if (column.element && !column.rawColumn) {\n          return null;\n        }\n\n        let columnAlias = column.columnName;\n\n        if (column.join) {\n          columnAlias = [column.join.alias, column.columnName].join('_');\n        }\n\n        return ResTarget(ColumnRef(column.columnName, column.source || 'records'), columnAlias);\n      }));\n    }\n\n    const timeZoneCast = (columnRef) => {\n      return FuncCall([ StringValue('pg_catalog'), StringValue('timezone') ], [ AConst(StringValue('UTC')), columnRef ]);\n    };\n\n    const timeZoneFormat = AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"'));\n\n    const recordKeyColumns = [];\n    const joinedColumns = [];\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n    const subJoinColumns = this.joinColumnsWithSorting;\n\n    for (const column of this.schema._rawColumns) {\n      if (column.name === '_record_key') {\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_key'), 'record_key'));\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_sequence'), 'record_sequence'));\n        break;\n      }\n    }\n\n    if (this.schema.createdByColumn) {\n      if (subJoinColumns.indexOf(this.schema.createdByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'created_by'), 'created_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('created_by.name'), 'created_by'));\n      }\n    }\n\n    if (this.schema.updatedByColumn) {\n      if (subJoinColumns.indexOf(this.schema.updatedByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'updated_by'), 'updated_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('updated_by.name'), 'updated_by'));\n      }\n    }\n\n    if (this.schema.assignedToColumn) {\n      const alias = this.schema.assignedToColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.assignedToColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n\n    if (this.schema.projectColumn) {\n      const alias = this.schema.projectColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.projectColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n    if (this.schema.recordSeriesColumn) {\n      const alias = this.schema.recordSeriesColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.recordSeriesColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('record_series_id', alias), 'record_series_id'));\n        joinedColumns.push(ResTarget(ColumnRef('rrule', alias), 'rrule'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.record_series_id'), 'record_series_id'));\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.rrule'), 'rrule'));\n      }\n    }\n\n    if (this.repeatableKey) {\n      return [\n        ResTarget(ColumnRef('_record_status'), 'record_status'),\n        ResTarget(ColumnRef('_version'), 'version'),\n        ResTarget(ColumnRef('_child_record_id'), 'id'),\n        ResTarget(ColumnRef('_record_id'), 'record_id'),\n        ResTarget(ColumnRef('_parent_id'), 'parent_id'),\n        ResTarget(ColumnRef('_index'), 'index'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_created_at')) ]),\n                  'created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_updated_at')) ]),\n                  'updated_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_created_at')) ]),\n                  'client_created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_updated_at')) ]),\n                  'client_updated_at'),\n        ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n        ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n        ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n        ResTarget(ColumnRef('_record_project_id'), 'record_project_id'),\n        ResTarget(ColumnRef('_record_assigned_to_id'), 'record_assigned_to_id'),\n        ResTarget(ColumnRef('_form_values'), 'form_values'),\n        ResTarget(ColumnRef('_latitude'), 'latitude'),\n        ResTarget(ColumnRef('_longitude'), 'longitude'),\n        ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n        ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n        ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n        ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n        ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n        ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n        ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n        ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n        ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n        ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n        ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n        ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n        ...joinedColumns\n      ];\n    }\n\n    return [\n      ResTarget(ColumnRef('_status'), 'status'),\n      ResTarget(ColumnRef('_version'), 'version'),\n      ResTarget(ColumnRef('_record_id'), 'id'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_created_at')),\n                                      timeZoneFormat ]), 'created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_updated_at')),\n                                      timeZoneFormat ]), 'updated_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_created_at')),\n                                      timeZoneFormat ]), 'client_created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_updated_at')),\n                                      timeZoneFormat ]), 'client_updated_at'),\n      ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n      ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n      ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n      ResTarget(ColumnRef('_project_id'), 'project_id'),\n      ResTarget(ColumnRef('_assigned_to_id'), 'assigned_to_id'),\n      ResTarget(ColumnRef('_form_values'), 'form_values'),\n      ResTarget(ColumnRef('_latitude'), 'latitude'),\n      ResTarget(ColumnRef('_longitude'), 'longitude'),\n      ResTarget(ColumnRef('_altitude'), 'altitude'),\n      ResTarget(ColumnRef('_speed'), 'speed'),\n      ResTarget(ColumnRef('_course'), 'course'),\n      ResTarget(ColumnRef('_horizontal_accuracy'), 'horizontal_accuracy'),\n      ResTarget(ColumnRef('_vertical_accuracy'), 'vertical_accuracy'),\n      ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n      ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n      ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n      ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n      ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n      ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n      ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n      ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n      ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n      ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n      ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n      ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n      ...recordKeyColumns,\n      ...joinedColumns\n    ];\n  }\n\n  fromClause({applySort, pageSize, pageIndex, boundingBox, searchFilter}) {\n    const ast = applySort ? this.toRawAST({sort: this.sortClause, pageSize, pageIndex, boundingBox, searchFilter})\n                          : this.toRawAST({boundingBox, searchFilter});\n\n    let baseQuery = RangeSubselect(ast, Alias('records'));\n\n    if (this.ast) {\n      return [ baseQuery ];\n    }\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n\n    if (this.schema.createdByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.createdByColumn.join);\n    }\n\n    if (this.schema.updatedByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.updatedByColumn.join);\n    }\n\n    if (this.schema.assignedToColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.assignedToColumn.join);\n    }\n\n    if (this.schema.projectColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.projectColumn.join);\n    }\n\n    if (this.schema.recordSeriesColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.recordSeriesColumn.join);\n    }\n\n    return [ baseQuery ];\n  }\n\n  get sortClause() {\n    if (this.sorting.isEmpty) {\n      return this.systemSortClause;\n    }\n\n    // always add the record ID to the sorting so it's stable across executions\n    const sorts = this.sorting.expressions.map((sort) => {\n      const direction = sort.direction === 'desc' ? 2 : 1;\n\n      if (this.ast) {\n        return [\n          SortBy(ColumnRef(sort.column.id, sort.column.source), direction, 0)\n        ];\n      }\n\n      return [\n        SortBy(ColumnRef(sort.column.columnName, sort.column.source || 'records'), direction, 0),\n        SortBy(ColumnRef('_record_id', 'records'), direction, 0)\n      ];\n    });\n\n    return _.flatten(sorts);\n  }\n\n  get systemSortClause() {\n    if (this.ast) {\n      return [ SortBy(AConst(IntegerValue(1)), 2, 0) ];\n    }\n\n    if (this.repeatableKey) {\n      return [ SortBy(ColumnRef('_updated_at'), 2, 0) ];\n    }\n\n    return [ SortBy(ColumnRef('_server_updated_at'), 2, 0) ];\n  }\n\n  get outerSortClause() {\n    return [ SortBy(ColumnRef('__row_number'), 1, 0) ];\n  }\n\n  toHumanDescription() {\n    const parts = [];\n\n    let description = null;\n\n    if ((description = this.statusFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.projectFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.assignmentFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.columnSettings.columns.map(o => o.filter).map(o => o.toHumanDescription()))) {\n      for (const desc of description) {\n        if (desc) {\n          parts.push(desc);\n        }\n      }\n    }\n\n    if (this.searchFilter) {\n      parts.push('Search by ' + this.searchFilter);\n    }\n\n    if ((description = this.dateFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    // if ((description = this.filter.toHumanDescription())) {\n    //   parts.push(description);\n    // }\n\n    if ((description = this.sorting.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    return parts.join(', ');\n  }\n\n  setup() {\n    if (!this.ast) {\n      return;\n    }\n\n    const geometryColumns = this.schema.geometryColumns;\n\n    if (geometryColumns.length) {\n      // For custom SQL, we need to add a column called __geometry at the end that evaluates to the\n      // exact same expression as the first geometry column. This is needed so that queries like\n      // SELECT geom, * FROM table will work when we need to reference the geom column from an outer\n      // query.\n      const geometryColumn = geometryColumns[0];\n\n      Converter.duplicateResTargetWithExactName(this, this.ast.SelectStmt.targetList,\n                                                geometryColumn, '__geometry');\n    }\n  }\n}\n"],"mappings":"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"}