{"version":3,"file":"query.js","sourceRoot":"","sources":["../src/query.js"],"names":[],"mappings":"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","sourcesContent":["import { Condition } from './condition';\nimport { Expression } from './expression';\nimport SortExpressions from './sort-expressions';\nimport Converter from './ast/converter';\nimport ColumnFilter from './column-filter';\nimport Deparse from 'pg-query-deparser';\nimport QueryOptions from './query-options';\nimport _ from 'lodash';\nimport ColumnSettings from './column-settings';\n\nimport { ResTarget,\n         ColumnRef,\n         FuncCall,\n         AConst,\n         StringValue,\n         TypeCast,\n         TypeName,\n         Alias,\n         RangeSubselect,\n         SelectStmt,\n         SortBy,\n         IntegerValue,\n         AStar } from './ast/helpers';\n\nexport default class Query {\n  constructor(attrs) {\n    this._ast = attrs.ast;\n    this._form = attrs.form;\n    this._repeatableKey = attrs.repeatableKey;\n    this._schema = attrs.schema;\n    this._filter = new Condition(attrs.filter, attrs.schema);\n    this._sorting = new SortExpressions(attrs.sorting, attrs.schema);\n    this._boundingBox = attrs.bounding_box || null;\n    this._searchFilter = attrs.search_filter;\n    this._dateFilter = new Expression(attrs.date_filter || {field: this.defaultDateField}, attrs.schema);\n    this._options = new QueryOptions(attrs.options || {});\n    this._columnSettings = new ColumnSettings(this._schema, attrs.columns);\n    this._statusFilter = new ColumnFilter({...attrs.status_filter, field: attrs.repeatableKey ? '_record_status' : '_status'}, this._schema);\n    this._projectFilter = new ColumnFilter({...attrs.project_filter, field: attrs.repeatableKey ? 'record_project.name' : 'project.name'}, this._schema);\n    this._assignmentFilter = new ColumnFilter({...attrs.assignment_filter, field: attrs.repeatableKey ? 'record_assigned_to.name' : 'assigned_to.name'}, this._schema);\n    this._changesetFilter = new ColumnFilter({...attrs.changeset_filter, field: '_changeset_id'}, this._schema);\n    this._full = attrs.full != null ? !!attrs.full : true;\n\n    this.setup();\n  }\n\n  get ast() {\n    return this._ast;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get repeatableKey() {\n    return this._repeatableKey;\n  }\n\n  get schema() {\n    return this._schema;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get sorting() {\n    return this._sorting;\n  }\n\n  get columnSettings() {\n    return this._columnSettings;\n  }\n\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  get statusFilter() {\n    return this._statusFilter;\n  }\n\n  get changesetFilter() {\n    return this._changesetFilter;\n  }\n\n  get projectFilter() {\n    return this._projectFilter;\n  }\n\n  get assignmentFilter() {\n    return this._assignmentFilter;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get full() {\n    return this._full;\n  }\n\n  get hasFilter() {\n    return this.statusFilter.hasFilter ||\n           this.projectFilter.hasFilter ||\n           this.assignmentFilter.hasFilter ||\n           this.changesetFilter.hasFilter ||\n           this.columnSettings.columns.find(o => o.hasFilter) ||\n           this.searchFilter ||\n           this.dateFilter.isValid ||\n           this.filter.expressions.find(o => o.isValid) ||\n           this.sorting.hasSort;\n  }\n\n  get joinColumns() {\n    const joins = [];\n\n    if (this.projectFilter.hasFilter) {\n      joins.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      joins.push(this.assignmentFilter.column);\n    }\n\n    joins.push.apply(joins, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter && o.column.join;\n    }).map(o => o.column));\n\n    joins.push.apply(joins, this.filter.allExpressions.filter((o) => {\n      return o.isValid && o.column.join;\n    }).map(o => o.column));\n    \n    return joins;\n  }\n\n  get referencedColumns() {\n    const columns = [];\n\n    if (this.projectFilter.hasFilter) {\n      columns.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      columns.push(this.assignmentFilter.column);\n    }\n\n    columns.push.apply(columns, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter;\n    }).map(o => o.column));\n\n    columns.push.apply(columns, this.filter.allExpressions.filter((o) => {\n      return o.isValid;\n    }).map(o => o.column));\n\n    if (this.sorting.hasSort) {\n      columns.push.apply(columns, this.sorting.expressions.filter((o) => {\n        return o.isValid;\n      }).map(o => o.column));\n    }\n\n    return columns;\n  }\n\n  get joinColumnsWithSorting() {\n    const joins = this.joinColumns;\n\n    if (this.sorting.hasSort) {\n      joins.push.apply(joins, this.sorting.expressions.filter((o) => {\n        return o.isValid && o.column.join;\n      }).map(o => o.column));\n    }\n\n    return joins;\n  }\n\n  get defaultDateField() {\n    return this.repeatableKey ? '_updated_at' : '_server_updated_at';\n  }\n\n  clearAllFilters() {\n    this.statusFilter.reset();\n    this.changesetFilter.reset();\n    this.projectFilter.reset();\n    this.assignmentFilter.reset();\n\n    this.columnSettings.reset();\n\n    this._filter = new Condition(null, this._schema);\n    this._sorting = new SortExpressions(null, this._schema);\n    // this._boundingBox = null;\n    this._searchFilter = '';\n    this._dateFilter = new Expression({field: this.defaultDateField}, this._schema);\n  }\n\n  set boundingBox(box) {\n    this._boundingBox = box;\n  }\n\n  get boundingBox() {\n    return this._boundingBox;\n  }\n\n  get searchFilter() {\n    return this._searchFilter || '';\n  }\n\n  set searchFilter(filter) {\n    this._searchFilter = filter;\n  }\n\n  get runtimeFilters() {\n    return {\n      boundingBox: this.boundingBox,\n      searchFilter: this.searchFilter,\n      dateFilter: this.dateFilter\n    };\n  }\n\n  toJSON({boundingBox = false} = {}) {\n    return {\n      filter: this.filter.toJSON(),\n      sorting: this.sorting.toJSON(),\n      options: this.options.toJSON(),\n      bounding_box: boundingBox ? this.boundingBox : null,\n      search_filter: this.searchFilter,\n      date_filter: this.dateFilter.toJSON(),\n      columns: this.columnSettings.toJSON(),\n      status_filter: this.statusFilter.toJSON(),\n      changeset_filter: this.changesetFilter.toJSON(),\n      project_filter: this.projectFilter.toJSON(),\n      assignment_filter: this.assignmentFilter.toJSON()\n    };\n  }\n\n  toRawAST(options) {\n    return new Converter().toAST(this, options);\n  }\n\n  toCountAST(options) {\n    return new Converter().toCountAST(this, options);\n  }\n\n  toTileAST(options) {\n    return new Converter().toTileAST(this, options);\n  }\n\n  toDistinctValuesAST(options) {\n    return new Converter().toDistinctValuesAST(this, options);\n  }\n\n  toHistogramAST(options) {\n    return new Converter().toHistogramAST(this, options);\n  }\n\n  toAST({applySort, pageSize, pageIndex, outerLimit}) {\n    const finalLimit = outerLimit ? AConst(IntegerValue(+outerLimit)) : null;\n\n    const sortClause = applySort ? this.outerSortClause : null;\n\n    const fromClause = this.fromClause({applySort, pageSize, pageIndex, ...this.runtimeFilters});\n\n    return SelectStmt({\n      targetList: this.targetList(),\n      fromClause: fromClause,\n      sortClause: sortClause,\n      limitCount: finalLimit,\n    });\n  }\n\n  deparse(ast) {\n    return new Deparse().deparse(ast);\n  }\n\n  toSchemaAST(ast, options) {\n    return new Converter().toSchemaAST(ast, options);\n  }\n\n  toDistinctValuesSQL(options) {\n    return this.deparse(this.toDistinctValuesAST(options));\n  }\n\n  toHistogramSQL(options) {\n    return this.deparse(this.toHistogramAST(options));\n  }\n\n  toCountSQL() {\n    return this.deparse(this.toCountAST(this.runtimeFilters));\n  }\n\n  toSQL({applySort, pageSize, pageIndex, outerLimit}) {\n    const options = {\n      applySort,\n      pageSize,\n      pageIndex,\n      outerLimit,\n      ...this.runtimeFilters\n    };\n\n    return this.deparse(this.toAST(options));\n  }\n\n  toTileSQL() {\n    return this.deparse(this.toTileAST(this.runtimeFilters));\n  }\n\n  toSummarySQL(columnSetting) {\n    const ast = new Converter().toSummaryAST(this, columnSetting, this.runtimeFilters);\n    return this.deparse(ast);\n  }\n\n  targetList() {\n    if (this.ast) {\n      return [ ResTarget(ColumnRef(AStar())) ];\n    }\n\n    if (!this.full) {\n      return _.compact(this.columnSettings.enabledColumns.map(column => {\n        if (column.element && !column.rawColumn) {\n          return null;\n        }\n\n        let columnAlias = column.columnName;\n\n        if (column.join) {\n          columnAlias = [column.join.alias, column.columnName].join('_');\n        }\n\n        return ResTarget(ColumnRef(column.columnName, column.source || 'records'), columnAlias);\n      }));\n    }\n\n    const timeZoneCast = (columnRef) => {\n      return FuncCall([ StringValue('pg_catalog'), StringValue('timezone') ], [ AConst(StringValue('UTC')), columnRef ]);\n    };\n\n    const timeZoneFormat = AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"'));\n\n    const recordKeyColumns = [];\n    const joinedColumns = [];\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n    const subJoinColumns = this.joinColumnsWithSorting;\n\n    for (const column of this.schema._rawColumns) {\n      if (column.name === '_record_key') {\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_key'), 'record_key'));\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_sequence'), 'record_sequence'));\n        break;\n      }\n    }\n\n    if (this.schema.createdByColumn) {\n      if (subJoinColumns.indexOf(this.schema.createdByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'created_by'), 'created_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('created_by.name'), 'created_by'));\n      }\n    }\n\n    if (this.schema.updatedByColumn) {\n      if (subJoinColumns.indexOf(this.schema.updatedByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'updated_by'), 'updated_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('updated_by.name'), 'updated_by'));\n      }\n    }\n\n    if (this.schema.assignedToColumn) {\n      const alias = this.schema.assignedToColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.assignedToColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n\n    if (this.schema.projectColumn) {\n      const alias = this.schema.projectColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.projectColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n    if (this.schema.recordSeriesColumn) {\n      const alias = this.schema.recordSeriesColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.recordSeriesColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('record_series_id', alias), 'record_series_id'));\n        joinedColumns.push(ResTarget(ColumnRef('rrule', alias), 'rrule'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.record_series_id'), 'record_series_id'));\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.rrule'), 'rrule'));\n      }\n    }\n\n    if (this.repeatableKey) {\n      return [\n        ResTarget(ColumnRef('_record_status'), 'record_status'),\n        ResTarget(ColumnRef('_version'), 'version'),\n        ResTarget(ColumnRef('_child_record_id'), 'id'),\n        ResTarget(ColumnRef('_record_id'), 'record_id'),\n        ResTarget(ColumnRef('_parent_id'), 'parent_id'),\n        ResTarget(ColumnRef('_index'), 'index'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_created_at')) ]),\n                  'created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_updated_at')) ]),\n                  'updated_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_created_at')) ]),\n                  'client_created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_updated_at')) ]),\n                  'client_updated_at'),\n        ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n        ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n        ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n        ResTarget(ColumnRef('_record_project_id'), 'record_project_id'),\n        ResTarget(ColumnRef('_record_assigned_to_id'), 'record_assigned_to_id'),\n        ResTarget(ColumnRef('_form_values'), 'form_values'),\n        ResTarget(ColumnRef('_latitude'), 'latitude'),\n        ResTarget(ColumnRef('_longitude'), 'longitude'),\n        ResTarget(ColumnRef('_geometry'), 'geometry'),\n        ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n        ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n        ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n        ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n        ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n        ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n        ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n        ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n        ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n        ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n        ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n        ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n        ...joinedColumns\n      ];\n    }\n\n    return [\n      ResTarget(ColumnRef('_status'), 'status'),\n      ResTarget(ColumnRef('_version'), 'version'),\n      ResTarget(ColumnRef('_record_id'), 'id'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_created_at')),\n                                      timeZoneFormat ]), 'created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_updated_at')),\n                                      timeZoneFormat ]), 'updated_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_created_at')),\n                                      timeZoneFormat ]), 'client_created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_updated_at')),\n                                      timeZoneFormat ]), 'client_updated_at'),\n      ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n      ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n      ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n      ResTarget(ColumnRef('_project_id'), 'project_id'),\n      ResTarget(ColumnRef('_assigned_to_id'), 'assigned_to_id'),\n      ResTarget(ColumnRef('_form_values'), 'form_values'),\n      ResTarget(ColumnRef('_latitude'), 'latitude'),\n      ResTarget(ColumnRef('_longitude'), 'longitude'),\n      ResTarget(ColumnRef('_altitude'), 'altitude'),\n      ResTarget(ColumnRef('_speed'), 'speed'),\n      ResTarget(ColumnRef('_course'), 'course'),\n      ResTarget(ColumnRef('_horizontal_accuracy'), 'horizontal_accuracy'),\n      ResTarget(ColumnRef('_vertical_accuracy'), 'vertical_accuracy'),\n      ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n      ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n      ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n      ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n      ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n      ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n      ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n      ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n      ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n      ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n      ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n      ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n      ...recordKeyColumns,\n      ...joinedColumns\n    ];\n  }\n\n  fromClause({applySort, pageSize, pageIndex, boundingBox, searchFilter}) {\n    const ast = applySort ? this.toRawAST({sort: this.sortClause, pageSize, pageIndex, boundingBox, searchFilter})\n                          : this.toRawAST({boundingBox, searchFilter});\n\n    let baseQuery = RangeSubselect(ast, Alias('records'));\n\n    if (this.ast) {\n      return [ baseQuery ];\n    }\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n\n    if (this.schema.createdByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.createdByColumn.join);\n    }\n\n    if (this.schema.updatedByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.updatedByColumn.join);\n    }\n\n    if (this.schema.assignedToColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.assignedToColumn.join);\n    }\n\n    if (this.schema.projectColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.projectColumn.join);\n    }\n\n    if (this.schema.recordSeriesColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.recordSeriesColumn.join);\n    }\n\n    return [ baseQuery ];\n  }\n\n  get sortClause() {\n    if (this.sorting.isEmpty) {\n      return this.systemSortClause;\n    }\n\n    // always add the record ID to the sorting so it's stable across executions\n    const sorts = this.sorting.expressions.map((sort) => {\n      const direction = sort.direction === 'desc' ? 2 : 1;\n\n      if (this.ast) {\n        return [\n          SortBy(ColumnRef(sort.column.id, sort.column.source), direction, 0)\n        ];\n      }\n\n      return [\n        SortBy(ColumnRef(sort.column.columnName, sort.column.source || 'records'), direction, 0),\n        SortBy(ColumnRef('_record_id', 'records'), direction, 0)\n      ];\n    });\n\n    return _.flatten(sorts);\n  }\n\n  get systemSortClause() {\n    if (this.ast) {\n      return [ SortBy(AConst(IntegerValue(1)), 2, 0) ];\n    }\n\n    if (this.repeatableKey) {\n      return [ SortBy(ColumnRef('_updated_at'), 2, 0) ];\n    }\n\n    return [ SortBy(ColumnRef('_server_updated_at'), 2, 0) ];\n  }\n\n  get outerSortClause() {\n    return [ SortBy(ColumnRef('__row_number'), 1, 0) ];\n  }\n\n  toHumanDescription() {\n    const parts = [];\n\n    let description = null;\n\n    if ((description = this.statusFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.projectFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.assignmentFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.columnSettings.columns.map(o => o.filter).map(o => o.toHumanDescription()))) {\n      for (const desc of description) {\n        if (desc) {\n          parts.push(desc);\n        }\n      }\n    }\n\n    if (this.searchFilter) {\n      parts.push('Search by ' + this.searchFilter);\n    }\n\n    if ((description = this.dateFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    // if ((description = this.filter.toHumanDescription())) {\n    //   parts.push(description);\n    // }\n\n    if ((description = this.sorting.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    return parts.join(', ');\n  }\n\n  setup() {\n    if (!this.ast) {\n      return;\n    }\n    const geometryColumns = this.schema.geometryColumns;\n\n    if (geometryColumns.length) {\n      // For custom SQL, we need to add a column called __geometry at the end that evaluates to the\n      // exact same expression as the first geometry column. This is needed so that queries like\n      // SELECT geom, * FROM table will work when we need to reference the geom column from an outer\n      // query.\n      const geometryColumn = geometryColumns[0];\n\n      Converter.duplicateResTargetWithExactName(this, this.ast.SelectStmt.targetList,\n                                                geometryColumn, '__geometry');\n    }\n  }\n}\n"]}