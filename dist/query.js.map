{"version":3,"sources":["../src/query.js"],"names":["Query","attrs","_ast","ast","_form","form","_repeatableKey","repeatableKey","_schema","schema","_filter","Condition","filter","_sorting","SortExpressions","sorting","_boundingBox","bounding_box","_searchFilter","search_filter","_dateFilter","Expression","date_filter","field","defaultDateField","_options","QueryOptions","options","_columnSettings","ColumnSettings","columns","_statusFilter","ColumnFilter","status_filter","_projectFilter","project_filter","_assignmentFilter","assignment_filter","_changesetFilter","changeset_filter","_full","full","setup","clearAllFilters","statusFilter","reset","changesetFilter","projectFilter","assignmentFilter","columnSettings","toJSON","boundingBox","searchFilter","dateFilter","toRawAST","console","log","Converter","toAST","toCountAST","toTileAST","toDistinctValuesAST","toHistogramAST","applySort","pageSize","pageIndex","outerLimit","finalLimit","sortClause","outerSortClause","fromClause","runtimeFilters","statement","targetList","limitCount","deparse","Deparse","toSchemaAST","toDistinctValuesSQL","toHistogramSQL","toCountSQL","toSQL","toTileSQL","toSummarySQL","columnSetting","toSummaryAST","_","compact","enabledColumns","map","column","element","rawColumn","columnAlias","columnName","join","alias","source","timeZoneCast","columnRef","timeZoneFormat","recordKeyColumns","joinedColumns","subJoinColumns","joinColumnsWithSorting","_rawColumns","name","push","createdByColumn","indexOf","updatedByColumn","assignedToColumn","projectColumn","recordSeriesColumn","id","sort","baseQuery","joinClause","toHumanDescription","parts","description","o","desc","geometryColumns","length","geometryColumn","duplicateResTargetWithExactName","SelectStmt","hasFilter","find","isValid","expressions","hasSort","joins","apply","allExpressions","joinColumns","box","isEmpty","systemSortClause","sorts","direction","flatten"],"mappings":"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","sourcesContent":["import { Condition } from './condition';\nimport { Expression } from './expression';\nimport SortExpressions from './sort-expressions';\nimport Converter from './ast/converter';\nimport ColumnFilter from './column-filter';\nimport Deparse from 'pg-query-deparser';\nimport QueryOptions from './query-options';\nimport _ from 'lodash';\nimport ColumnSettings from './column-settings';\n\nimport { ResTarget,\n         ColumnRef,\n         FuncCall,\n         AConst,\n         StringValue,\n         TypeCast,\n         TypeName,\n         Alias,\n         RangeSubselect,\n         SelectStmt,\n         SortBy,\n         IntegerValue,\n         AStar } from './ast/helpers';\n\nexport default class Query {\n  constructor(attrs) {\n    this._ast = attrs.ast;\n    this._form = attrs.form;\n    this._repeatableKey = attrs.repeatableKey;\n    this._schema = attrs.schema;\n    this._filter = new Condition(attrs.filter, attrs.schema);\n    this._sorting = new SortExpressions(attrs.sorting, attrs.schema);\n    this._boundingBox = attrs.bounding_box || null;\n    this._searchFilter = attrs.search_filter;\n    this._dateFilter = new Expression(attrs.date_filter || {field: this.defaultDateField}, attrs.schema);\n    this._options = new QueryOptions(attrs.options || {});\n    this._columnSettings = new ColumnSettings(this._schema, attrs.columns);\n    this._statusFilter = new ColumnFilter({...attrs.status_filter, field: attrs.repeatableKey ? '_record_status' : '_status'}, this._schema);\n    this._projectFilter = new ColumnFilter({...attrs.project_filter, field: attrs.repeatableKey ? 'record_project.name' : 'project.name'}, this._schema);\n    this._assignmentFilter = new ColumnFilter({...attrs.assignment_filter, field: attrs.repeatableKey ? 'record_assigned_to.name' : 'assigned_to.name'}, this._schema);\n    this._changesetFilter = new ColumnFilter({...attrs.changeset_filter, field: '_changeset_id'}, this._schema);\n    this._full = attrs.full != null ? !!attrs.full : true;\n\n    this.setup();\n  }\n\n  get ast() {\n    return this._ast;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get repeatableKey() {\n    return this._repeatableKey;\n  }\n\n  get schema() {\n    return this._schema;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get sorting() {\n    return this._sorting;\n  }\n\n  get columnSettings() {\n    return this._columnSettings;\n  }\n\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  get statusFilter() {\n    return this._statusFilter;\n  }\n\n  get changesetFilter() {\n    return this._changesetFilter;\n  }\n\n  get projectFilter() {\n    return this._projectFilter;\n  }\n\n  get assignmentFilter() {\n    return this._assignmentFilter;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get full() {\n    return this._full;\n  }\n\n  get hasFilter() {\n    return this.statusFilter.hasFilter ||\n           this.projectFilter.hasFilter ||\n           this.assignmentFilter.hasFilter ||\n           this.changesetFilter.hasFilter ||\n           this.columnSettings.columns.find(o => o.hasFilter) ||\n           this.searchFilter ||\n           this.dateFilter.isValid ||\n           this.filter.expressions.find(o => o.isValid) ||\n           this.sorting.hasSort;\n  }\n\n  get joinColumns() {\n    const joins = [];\n\n    if (this.projectFilter.hasFilter) {\n      joins.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      joins.push(this.assignmentFilter.column);\n    }\n\n    joins.push.apply(joins, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter && o.column.join;\n    }).map(o => o.column));\n\n    joins.push.apply(joins, this.filter.allExpressions.filter((o) => {\n      return o.isValid && o.column.join;\n    }).map(o => o.column));\n    \n    console.log('joins: ', joins);\n    return joins;\n  }\n\n  get referencedColumns() {\n    const columns = [];\n\n    if (this.projectFilter.hasFilter) {\n      columns.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      columns.push(this.assignmentFilter.column);\n    }\n\n    columns.push.apply(columns, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter;\n    }).map(o => o.column));\n\n    columns.push.apply(columns, this.filter.allExpressions.filter((o) => {\n      return o.isValid;\n    }).map(o => o.column));\n\n    if (this.sorting.hasSort) {\n      columns.push.apply(columns, this.sorting.expressions.filter((o) => {\n        return o.isValid;\n      }).map(o => o.column));\n    }\n\n    return columns;\n  }\n\n  get joinColumnsWithSorting() {\n    const joins = this.joinColumns;\n\n    if (this.sorting.hasSort) {\n      joins.push.apply(joins, this.sorting.expressions.filter((o) => {\n        return o.isValid && o.column.join;\n      }).map(o => o.column));\n    }\n\n    return joins;\n  }\n\n  get defaultDateField() {\n    return this.repeatableKey ? '_updated_at' : '_server_updated_at';\n  }\n\n  clearAllFilters() {\n    this.statusFilter.reset();\n    this.changesetFilter.reset();\n    this.projectFilter.reset();\n    this.assignmentFilter.reset();\n\n    this.columnSettings.reset();\n\n    this._filter = new Condition(null, this._schema);\n    this._sorting = new SortExpressions(null, this._schema);\n    // this._boundingBox = null;\n    this._searchFilter = '';\n    this._dateFilter = new Expression({field: this.defaultDateField}, this._schema);\n  }\n\n  set boundingBox(box) {\n    this._boundingBox = box;\n  }\n\n  get boundingBox() {\n    return this._boundingBox;\n  }\n\n  get searchFilter() {\n    return this._searchFilter || '';\n  }\n\n  set searchFilter(filter) {\n    this._searchFilter = filter;\n  }\n\n  get runtimeFilters() {\n    return {\n      boundingBox: this.boundingBox,\n      searchFilter: this.searchFilter,\n      dateFilter: this.dateFilter\n    };\n  }\n\n  toJSON({boundingBox = false} = {}) {\n    return {\n      filter: this.filter.toJSON(),\n      sorting: this.sorting.toJSON(),\n      options: this.options.toJSON(),\n      bounding_box: boundingBox ? this.boundingBox : null,\n      search_filter: this.searchFilter,\n      date_filter: this.dateFilter.toJSON(),\n      columns: this.columnSettings.toJSON(),\n      status_filter: this.statusFilter.toJSON(),\n      changeset_filter: this.changesetFilter.toJSON(),\n      project_filter: this.projectFilter.toJSON(),\n      assignment_filter: this.assignmentFilter.toJSON()\n    };\n  }\n\n  toRawAST(options) {\n    console.log('options: ', options);\n    const ast = new Converter().toAST(this, options);\n    console.log('ast: ', ast);\n    return ast;\n  }\n\n  toCountAST(options) {\n    return new Converter().toCountAST(this, options);\n  }\n\n  toTileAST(options) {\n    return new Converter().toTileAST(this, options);\n  }\n\n  toDistinctValuesAST(options) {\n    return new Converter().toDistinctValuesAST(this, options);\n  }\n\n  toHistogramAST(options) {\n    return new Converter().toHistogramAST(this, options);\n  }\n\n  toAST({applySort, pageSize, pageIndex, outerLimit}) {\n    const finalLimit = outerLimit ? AConst(IntegerValue(+outerLimit)) : null;\n\n    const sortClause = applySort ? this.outerSortClause : null;\n\n    const fromClause = this.fromClause({applySort, pageSize, pageIndex, ...this.runtimeFilters});\n\n    const statement = SelectStmt({\n      targetList: this.targetList(),\n      fromClause: fromClause,\n      sortClause: sortClause,\n      limitCount: finalLimit,\n    });\n\n    console.log('to AST statement: ', statement)\n\n    return statement\n  }\n\n  deparse(ast) {\n    return new Deparse().deparse(ast);\n  }\n\n  toSchemaAST(ast, options) {\n    return new Converter().toSchemaAST(ast, options);\n  }\n\n  toDistinctValuesSQL(options) {\n    return this.deparse(this.toDistinctValuesAST(options));\n  }\n\n  toHistogramSQL(options) {\n    return this.deparse(this.toHistogramAST(options));\n  }\n\n  toCountSQL() {\n    return this.deparse(this.toCountAST(this.runtimeFilters));\n  }\n\n  toSQL({applySort, pageSize, pageIndex, outerLimit}) {\n    const options = {\n      applySort,\n      pageSize,\n      pageIndex,\n      outerLimit,\n      ...this.runtimeFilters\n    };\n\n    return this.deparse(this.toAST(options));\n  }\n\n  toTileSQL() {\n    return this.deparse(this.toTileAST(this.runtimeFilters));\n  }\n\n  toSummarySQL(columnSetting) {\n    const ast = new Converter().toSummaryAST(this, columnSetting, this.runtimeFilters);\n    return this.deparse(ast);\n  }\n\n  targetList() {\n    if (this.ast) {\n      return [ ResTarget(ColumnRef(AStar())) ];\n    }\n\n    if (!this.full) {\n      return _.compact(this.columnSettings.enabledColumns.map(column => {\n        if (column.element && !column.rawColumn) {\n          return null;\n        }\n\n        let columnAlias = column.columnName;\n\n        if (column.join) {\n          columnAlias = [column.join.alias, column.columnName].join('_');\n        }\n\n        return ResTarget(ColumnRef(column.columnName, column.source || 'records'), columnAlias);\n      }));\n    }\n\n    const timeZoneCast = (columnRef) => {\n      return FuncCall([ StringValue('pg_catalog'), StringValue('timezone') ], [ AConst(StringValue('UTC')), columnRef ]);\n    };\n\n    const timeZoneFormat = AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"'));\n\n    const recordKeyColumns = [];\n    const joinedColumns = [];\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n    const subJoinColumns = this.joinColumnsWithSorting;\n\n    for (const column of this.schema._rawColumns) {\n      if (column.name === '_record_key') {\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_key'), 'record_key'));\n        recordKeyColumns.push(ResTarget(ColumnRef('_record_sequence'), 'record_sequence'));\n        break;\n      }\n    }\n\n    if (this.schema.createdByColumn) {\n      if (subJoinColumns.indexOf(this.schema.createdByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'created_by'), 'created_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('created_by.name'), 'created_by'));\n      }\n    }\n\n    if (this.schema.updatedByColumn) {\n      if (subJoinColumns.indexOf(this.schema.updatedByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'updated_by'), 'updated_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('updated_by.name'), 'updated_by'));\n      }\n    }\n\n    if (this.schema.assignedToColumn) {\n      const alias = this.schema.assignedToColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.assignedToColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n\n    if (this.schema.projectColumn) {\n      const alias = this.schema.projectColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.projectColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.name'), alias));\n      }\n    }\n    if (this.schema.recordSeriesColumn) {\n      const alias = this.schema.recordSeriesColumn.join.alias;\n\n      if (subJoinColumns.indexOf(this.schema.recordSeriesColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('rrule', alias), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef(alias + '.rrule'), alias));\n      }\n    }\n\n    if (this.repeatableKey) {\n      return [\n        ResTarget(ColumnRef('_record_status'), 'record_status'),\n        ResTarget(ColumnRef('_version'), 'version'),\n        ResTarget(ColumnRef('_child_record_id'), 'id'),\n        ResTarget(ColumnRef('_record_id'), 'record_id'),\n        ResTarget(ColumnRef('_parent_id'), 'parent_id'),\n        ResTarget(ColumnRef('_index'), 'index'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_created_at')) ]),\n                  'created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_updated_at')) ]),\n                  'updated_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_created_at')) ]),\n                  'client_created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_updated_at')) ]),\n                  'client_updated_at'),\n        ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n        ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n        ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n        ResTarget(ColumnRef('_record_project_id'), 'record_project_id'),\n        ResTarget(ColumnRef('_record_assigned_to_id'), 'record_assigned_to_id'),\n        ResTarget(ColumnRef('_form_values'), 'form_values'),\n        ResTarget(ColumnRef('_latitude'), 'latitude'),\n        ResTarget(ColumnRef('_longitude'), 'longitude'),\n        ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n        ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n        ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n        ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n        ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n        ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n        ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n        ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n        ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n        ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n        ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n        ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n        ...joinedColumns\n      ];\n    }\n\n    return [\n      ResTarget(ColumnRef('_status'), 'status'),\n      ResTarget(ColumnRef('_version'), 'version'),\n      ResTarget(ColumnRef('_record_id'), 'id'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_created_at')),\n                                      timeZoneFormat ]), 'created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_updated_at')),\n                                      timeZoneFormat ]), 'updated_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_created_at')),\n                                      timeZoneFormat ]), 'client_created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_updated_at')),\n                                      timeZoneFormat ]), 'client_updated_at'),\n      ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n      ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n      ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n      ResTarget(ColumnRef('_project_id'), 'project_id'),\n      ResTarget(ColumnRef('_assigned_to_id'), 'assigned_to_id'),\n      ResTarget(ColumnRef('_form_values'), 'form_values'),\n      ResTarget(ColumnRef('_latitude'), 'latitude'),\n      ResTarget(ColumnRef('_longitude'), 'longitude'),\n      ResTarget(ColumnRef('_altitude'), 'altitude'),\n      ResTarget(ColumnRef('_speed'), 'speed'),\n      ResTarget(ColumnRef('_course'), 'course'),\n      ResTarget(ColumnRef('_horizontal_accuracy'), 'horizontal_accuracy'),\n      ResTarget(ColumnRef('_vertical_accuracy'), 'vertical_accuracy'),\n      ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n      ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n      ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n      ResTarget(ColumnRef('_changeset_id'), 'changeset_id'),\n      ResTarget(ColumnRef('_created_latitude'), 'created_latitude'),\n      ResTarget(ColumnRef('_created_longitude'), 'created_longitude'),\n      ResTarget(ColumnRef('_created_altitude'), 'created_altitude'),\n      ResTarget(ColumnRef('_created_horizontal_accuracy'), 'created_horizontal_accuracy'),\n      ResTarget(ColumnRef('_updated_latitude'), 'updated_latitude'),\n      ResTarget(ColumnRef('_updated_longitude'), 'updated_longitude'),\n      ResTarget(ColumnRef('_updated_altitude'), 'updated_altitude'),\n      ResTarget(ColumnRef('_updated_horizontal_accuracy'), 'updated_horizontal_accuracy'),\n      ResTarget(ColumnRef('_record_series_id'), 'record_series_id'),\n      ...recordKeyColumns,\n      ...joinedColumns\n    ];\n  }\n\n  fromClause({applySort, pageSize, pageIndex, boundingBox, searchFilter}) {\n    const ast = applySort ? this.toRawAST({sort: this.sortClause, pageSize, pageIndex, boundingBox, searchFilter})\n                          : this.toRawAST({boundingBox, searchFilter});\n\n    let baseQuery = RangeSubselect(ast, Alias('records'));\n\n    if (this.ast) {\n      return [ baseQuery ];\n    }\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n\n    if (this.schema.createdByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.createdByColumn.join);\n    }\n\n    if (this.schema.updatedByColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.updatedByColumn.join);\n    }\n\n    if (this.schema.assignedToColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.assignedToColumn.join);\n    }\n\n    if (this.schema.projectColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.projectColumn.join);\n    }\n\n    if (this.schema.recordSeriesColumn) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.recordSeriesColumn.join);\n    }\n\n    return [ baseQuery ];\n  }\n\n  get sortClause() {\n    if (this.sorting.isEmpty) {\n      return this.systemSortClause;\n    }\n\n    // always add the record ID to the sorting so it's stable across executions\n    const sorts = this.sorting.expressions.map((sort) => {\n      const direction = sort.direction === 'desc' ? 2 : 1;\n\n      if (this.ast) {\n        return [\n          SortBy(ColumnRef(sort.column.id, sort.column.source), direction, 0)\n        ];\n      }\n\n      return [\n        SortBy(ColumnRef(sort.column.columnName, sort.column.source || 'records'), direction, 0),\n        SortBy(ColumnRef('_record_id', 'records'), direction, 0)\n      ];\n    });\n\n    return _.flatten(sorts);\n  }\n\n  get systemSortClause() {\n    if (this.ast) {\n      return [ SortBy(AConst(IntegerValue(1)), 2, 0) ];\n    }\n\n    if (this.repeatableKey) {\n      return [ SortBy(ColumnRef('_updated_at'), 2, 0) ];\n    }\n\n    return [ SortBy(ColumnRef('_server_updated_at'), 2, 0) ];\n  }\n\n  get outerSortClause() {\n    return [ SortBy(ColumnRef('__row_number'), 1, 0) ];\n  }\n\n  toHumanDescription() {\n    const parts = [];\n\n    let description = null;\n\n    if ((description = this.statusFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.projectFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.assignmentFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.columnSettings.columns.map(o => o.filter).map(o => o.toHumanDescription()))) {\n      for (const desc of description) {\n        if (desc) {\n          parts.push(desc);\n        }\n      }\n    }\n\n    if (this.searchFilter) {\n      parts.push('Search by ' + this.searchFilter);\n    }\n\n    if ((description = this.dateFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    // if ((description = this.filter.toHumanDescription())) {\n    //   parts.push(description);\n    // }\n\n    if ((description = this.sorting.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    return parts.join(', ');\n  }\n\n  setup() {\n    if (!this.ast) {\n      return;\n    }\n\n    const geometryColumns = this.schema.geometryColumns;\n\n    if (geometryColumns.length) {\n      // For custom SQL, we need to add a column called __geometry at the end that evaluates to the\n      // exact same expression as the first geometry column. This is needed so that queries like\n      // SELECT geom, * FROM table will work when we need to reference the geom column from an outer\n      // query.\n      const geometryColumn = geometryColumns[0];\n\n      Converter.duplicateResTargetWithExactName(this, this.ast.SelectStmt.targetList,\n                                                geometryColumn, '__geometry');\n    }\n  }\n}\n"],"file":"query.js"}