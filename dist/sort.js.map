{"version":3,"file":"sort.js","sourceRoot":"","sources":["../src/sort.js"],"names":[],"mappings":";;;AAAa,QAAA,aAAa,GAAG,KAAK,CAAC;AAEtB,QAAA,cAAc,GAAG,MAAM,CAAC;AAExB,QAAA,UAAU,GAAG;IACxB,GAAG,EAAE,qBAAa;IAClB,IAAI,EAAE,sBAAc;CACrB,CAAC;AAEF,MAAa,IAAI;IACf,YAAY,KAAK,EAAE,MAAM;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,SAAS,CAAC,SAAS;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,MAAM,CAAC,MAAM;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAChC,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,SAAS,EAAE,IAAI,CAAC,UAAU;SAC3B,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,CAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtG,CAAC;CACF;AApDD,oBAoDC","sourcesContent":["export const DIRECTION_ASC = 'asc';\n\nexport const DIRECTION_DESC = 'desc';\n\nexport const DIRECTIONS = {\n  Asc: DIRECTION_ASC,\n  Desc: DIRECTION_DESC\n};\n\nexport class Sort {\n  constructor(attrs, schema) {\n    this._field = attrs.field || null;\n    this._direction = attrs.direction || null;\n    this._schema = schema;\n  }\n\n  get isValid() {\n    return !!this.column;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(direction) {\n    this._direction = direction;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  get column() {\n    return this._schema.columnForFieldKey(this.field);\n  }\n\n  set column(column) {\n    this._field = column ? column.id : null;\n  }\n\n  get columnName() {\n    if (this.column) {\n      return this.column.columnName;\n    }\n    return null;\n  }\n\n  toJSON() {\n    return {\n      field: this._field,\n      direction: this._direction\n    };\n  }\n\n  toHumanDescription() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return [ this.column ? this.column.name : this.columnName, this.direction.toUpperCase() ].join(' ');\n  }\n}\n"]}