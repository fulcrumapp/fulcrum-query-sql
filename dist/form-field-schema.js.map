{"version":3,"file":"form-field-schema.js","names":["FormFieldSchema","fullSchema","addSystemColumn","label","attribute","columnName","type","accessor","join","sql","column","SimpleColumn","name","attributeName","index","_columns","length","push","_columnsByKey","id","addElementColumn","element","part","columnKey","key","rawColumn","_rawColumnsByKey","addRawElementColumn","columnObject","ElementColumn","setupElementColumns","elementsForColumns","isRepeatableElement","isLocationElement","isDynamicElement","isButtonElement","isAddressElement","isPhotoElement","isVideoElement","isAudioElement","isSignatureElement","findColumnByID","columns","find","e","columnForFieldKey","fieldKey","filter","c","isGeometry","_allElements","container","flattenElements","_elementsForColumns","elements","allElements","skip","isSectionElement","isLabelElement"],"sources":["../src/form-field-schema.js"],"sourcesContent":["import ElementColumn from './schema/element-column';\nimport SimpleColumn from './schema/simple-column';\n\nexport default class FormFieldSchema {\n  constructor({fullSchema = false}) {\n    this.fullSchema = fullSchema;\n  }\n\n  addSystemColumn(label, attribute, columnName, type, accessor, join, sql) {\n    const column = new SimpleColumn({name: label,\n                                     attributeName: attribute,\n                                     columnName: columnName,\n                                     type: type,\n                                     accessor: accessor,\n                                     join,\n                                     sql,\n                                     index: this._columns.length});\n    this._columns.push(column);\n    this._columnsByKey[column.id] = column;\n\n    return column;\n  }\n\n  addElementColumn(element, part, type) {\n    const columnKey = part ? element.key + '_' + part : element.key;\n\n    const rawColumn = this._rawColumnsByKey[columnKey];\n\n    return this.addRawElementColumn(element, rawColumn, null, type || rawColumn.type, part, columnKey);\n  }\n\n  addRawElementColumn(element, rawColumn, id, type, part, columnKey) {\n    const columnObject = new ElementColumn({element, rawColumn, type, id, part, index: this._columns.length});\n\n    this._columns.push(columnObject);\n    this._columnsByKey[columnKey] = columnObject;\n\n    return columnObject;\n  }\n\n  setupElementColumns() {\n    for (const element of this.elementsForColumns) {\n      // repeatable elements don't have any physical columns, but we want to add a column that has the count of items\n      if (element.isRepeatableElement) {\n        this.addElementColumn(element, null, 'integer');\n      } else if (element.isLocationElement) {\n        this.addElementColumn(element, 'address', 'string');\n        this.addElementColumn(element, 'latitude', 'double');\n        this.addElementColumn(element, 'longitude', 'double');\n      } else if (!element.isDynamicElement && !element.isButtonElement) {\n        this.addElementColumn(element);\n      }\n\n      if (this.fullSchema && element.isAddressElement) {\n        this.addElementColumn(element, 'sub_thoroughfare');\n        this.addElementColumn(element, 'thoroughfare');\n        this.addElementColumn(element, 'suite');\n        this.addElementColumn(element, 'locality');\n        this.addElementColumn(element, 'sub_admin_area');\n        this.addElementColumn(element, 'admin_area');\n        this.addElementColumn(element, 'postal_code');\n        this.addElementColumn(element, 'country');\n      }\n\n      if (this.fullSchema && (element.isPhotoElement || element.isVideoElement || element.isAudioElement)) {\n        this.addElementColumn(element, 'captions', 'array');\n        this.addElementColumn(element, 'urls', 'array');\n      }\n\n      if (this.fullSchema && element.isSignatureElement) {\n        this.addElementColumn(element, 'timestamp');\n      }\n\n      if (this.fullSchema && (element.isDynamicElement)) {\n        this.addElementColumn(element, 'metadata', 'array');\n        this.addElementColumn(element, 'elements', 'array');\n        this.addElementColumn(element, 'values', 'array');\n      }\n    }\n  }\n\n  findColumnByID(id) {\n    return this.columns.find(e => e.id === id);\n  }\n\n  columnForFieldKey(fieldKey, part) {\n    if (part) {\n      return this._columnsByKey[fieldKey + '_' + part];\n    }\n\n    return this._columnsByKey[fieldKey];\n  }\n\n  get geometryColumns() {\n    return this._columns.filter(c => c.isGeometry);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  get allElements() {\n    if (!this._allElements) {\n      this._allElements = this.container.flattenElements(false);\n    }\n    return this._allElements;\n  }\n\n  get elementsForColumns() {\n    if (!this._elementsForColumns) {\n      this._elementsForColumns = [];\n\n      const elements = this.allElements;\n\n      for (const element of elements) {\n        const skip = element.isSectionElement ||\n                     element.isLabelElement;\n\n        if (!skip) {\n          this._elementsForColumns.push(element);\n        }\n      }\n    }\n\n    return this._elementsForColumns;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAE7BA,eAAe;EAClC,+BAAkC;IAAA,2BAArBC,UAAU;MAAVA,UAAU,gCAAG,KAAK;IAC7B,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAAC;EAAA,OAEDC,eAAe,GAAf,yBAAgBC,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,GAAG,EAAE;IACvE,IAAMC,MAAM,GAAG,IAAIC,wBAAY,CAAC;MAACC,IAAI,EAAET,KAAK;MACXU,aAAa,EAAET,SAAS;MACxBC,UAAU,EAAEA,UAAU;MACtBC,IAAI,EAAEA,IAAI;MACVC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAJA,IAAI;MACJC,GAAG,EAAHA,GAAG;MACHK,KAAK,EAAE,IAAI,CAACC,QAAQ,CAACC;IAAM,CAAC,CAAC;IAC9D,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACP,MAAM,CAAC;IAC1B,IAAI,CAACQ,aAAa,CAACR,MAAM,CAACS,EAAE,CAAC,GAAGT,MAAM;IAEtC,OAAOA,MAAM;EACf,CAAC;EAAA,OAEDU,gBAAgB,GAAhB,0BAAiBC,OAAO,EAAEC,IAAI,EAAEhB,IAAI,EAAE;IACpC,IAAMiB,SAAS,GAAGD,IAAI,GAAGD,OAAO,CAACG,GAAG,GAAG,GAAG,GAAGF,IAAI,GAAGD,OAAO,CAACG,GAAG;IAE/D,IAAMC,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,SAAS,CAAC;IAElD,OAAO,IAAI,CAACI,mBAAmB,CAACN,OAAO,EAAEI,SAAS,EAAE,IAAI,EAAEnB,IAAI,IAAImB,SAAS,CAACnB,IAAI,EAAEgB,IAAI,EAAEC,SAAS,CAAC;EACpG,CAAC;EAAA,OAEDI,mBAAmB,GAAnB,6BAAoBN,OAAO,EAAEI,SAAS,EAAEN,EAAE,EAAEb,IAAI,EAAEgB,IAAI,EAAEC,SAAS,EAAE;IACjE,IAAMK,YAAY,GAAG,IAAIC,yBAAa,CAAC;MAACR,OAAO,EAAPA,OAAO;MAAEI,SAAS,EAATA,SAAS;MAAEnB,IAAI,EAAJA,IAAI;MAAEa,EAAE,EAAFA,EAAE;MAAEG,IAAI,EAAJA,IAAI;MAAER,KAAK,EAAE,IAAI,CAACC,QAAQ,CAACC;IAAM,CAAC,CAAC;IAEzG,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACW,YAAY,CAAC;IAChC,IAAI,CAACV,aAAa,CAACK,SAAS,CAAC,GAAGK,YAAY;IAE5C,OAAOA,YAAY;EACrB,CAAC;EAAA,OAEDE,mBAAmB,GAAnB,+BAAsB;IACpB,qDAAsB,IAAI,CAACC,kBAAkB,wCAAE;MAAA,IAApCV,OAAO;MAChB;MACA,IAAIA,OAAO,CAACW,mBAAmB,EAAE;QAC/B,IAAI,CAACZ,gBAAgB,CAACC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC;MACjD,CAAC,MAAM,IAAIA,OAAO,CAACY,iBAAiB,EAAE;QACpC,IAAI,CAACb,gBAAgB,CAACC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC;QACnD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;QACpD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC;MACvD,CAAC,MAAM,IAAI,CAACA,OAAO,CAACa,gBAAgB,IAAI,CAACb,OAAO,CAACc,eAAe,EAAE;QAChE,IAAI,CAACf,gBAAgB,CAACC,OAAO,CAAC;MAChC;MAEA,IAAI,IAAI,CAACpB,UAAU,IAAIoB,OAAO,CAACe,gBAAgB,EAAE;QAC/C,IAAI,CAAChB,gBAAgB,CAACC,OAAO,EAAE,kBAAkB,CAAC;QAClD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,cAAc,CAAC;QAC9C,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,OAAO,CAAC;QACvC,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,UAAU,CAAC;QAC1C,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,gBAAgB,CAAC;QAChD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,YAAY,CAAC;QAC5C,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,aAAa,CAAC;QAC7C,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,SAAS,CAAC;MAC3C;MAEA,IAAI,IAAI,CAACpB,UAAU,KAAKoB,OAAO,CAACgB,cAAc,IAAIhB,OAAO,CAACiB,cAAc,IAAIjB,OAAO,CAACkB,cAAc,CAAC,EAAE;QACnG,IAAI,CAACnB,gBAAgB,CAACC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;QACnD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;MACjD;MAEA,IAAI,IAAI,CAACpB,UAAU,IAAIoB,OAAO,CAACmB,kBAAkB,EAAE;QACjD,IAAI,CAACpB,gBAAgB,CAACC,OAAO,EAAE,WAAW,CAAC;MAC7C;MAEA,IAAI,IAAI,CAACpB,UAAU,IAAKoB,OAAO,CAACa,gBAAiB,EAAE;QACjD,IAAI,CAACd,gBAAgB,CAACC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;QACnD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;QACnD,IAAI,CAACD,gBAAgB,CAACC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;MACnD;IACF;EACF,CAAC;EAAA,OAEDoB,cAAc,GAAd,wBAAetB,EAAE,EAAE;IACjB,OAAO,IAAI,CAACuB,OAAO,CAACC,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACzB,EAAE,KAAKA,EAAE;IAAA,EAAC;EAC5C,CAAC;EAAA,OAED0B,iBAAiB,GAAjB,2BAAkBC,QAAQ,EAAExB,IAAI,EAAE;IAChC,IAAIA,IAAI,EAAE;MACR,OAAO,IAAI,CAACJ,aAAa,CAAC4B,QAAQ,GAAG,GAAG,GAAGxB,IAAI,CAAC;IAClD;IAEA,OAAO,IAAI,CAACJ,aAAa,CAAC4B,QAAQ,CAAC;EACrC,CAAC;EAAA;IAAA;IAAA,KAED,eAAsB;MACpB,OAAO,IAAI,CAAC/B,QAAQ,CAACgC,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,UAAU;MAAA,EAAC;IAChD;EAAC;IAAA;IAAA,KAED,eAAc;MACZ,OAAO,IAAI,CAAClC,QAAQ;IACtB;EAAC;IAAA;IAAA,KAED,eAAkB;MAChB,IAAI,CAAC,IAAI,CAACmC,YAAY,EAAE;QACtB,IAAI,CAACA,YAAY,GAAG,IAAI,CAACC,SAAS,CAACC,eAAe,CAAC,KAAK,CAAC;MAC3D;MACA,OAAO,IAAI,CAACF,YAAY;IAC1B;EAAC;IAAA;IAAA,KAED,eAAyB;MACvB,IAAI,CAAC,IAAI,CAACG,mBAAmB,EAAE;QAC7B,IAAI,CAACA,mBAAmB,GAAG,EAAE;QAE7B,IAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW;QAEjC,sDAAsBD,QAAQ,2CAAE;UAAA,IAArBjC,OAAO;UAChB,IAAMmC,IAAI,GAAGnC,OAAO,CAACoC,gBAAgB,IACxBpC,OAAO,CAACqC,cAAc;UAEnC,IAAI,CAACF,IAAI,EAAE;YACT,IAAI,CAACH,mBAAmB,CAACpC,IAAI,CAACI,OAAO,CAAC;UACxC;QACF;MACF;MAEA,OAAO,IAAI,CAACgC,mBAAmB;IACjC;EAAC;EAAA;AAAA;AAAA"}