{"version":3,"file":"sort-expressions.js","sourceRoot":"","sources":["../src/sort-expressions.js"],"names":[],"mappings":";;AAAA,iCAA8B;AAE9B,MAAqB,eAAe;IAClC,YAAY,KAAK,EAAE,MAAM;QACvB,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QAEpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,WAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,YAAY,GAAG,CAAE,IAAI,WAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAE,CAAC;IACvF,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,YAAY,GAAG,CAAE,IAAI,WAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAE,CAAC;IACxF,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IACxD,CAAC;IAED,IAAI,OAAO;QACT,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC;CACF;AAvCD,kCAuCC","sourcesContent":["import { Sort } from './sort';\n\nexport default class SortExpressions {\n  constructor(sorts, schema) {\n    sorts = sorts || [];\n\n    this._expressions = sorts.map(o => new Sort(o, schema));\n    this._schema = schema;\n  }\n\n  sortByAsc(column) {\n    this._expressions = [ new Sort({field: column.id, direction: 'asc'}, this._schema) ];\n  }\n\n  sortByDesc(column) {\n    this._expressions = [ new Sort({field: column.id, direction: 'desc'}, this._schema) ];\n  }\n\n  get isEmpty() {\n    return this._expressions.find(e => e.isValid) == null;\n  }\n\n  get hasSort() {\n    return !this.isEmpty;\n  }\n\n  get expressions() {\n    return this._expressions;\n  }\n\n  toJSON() {\n    return this.expressions.map(o => o.toJSON());\n  }\n\n  toHumanDescription() {\n    if (!this.hasSort) {\n      return null;\n    }\n\n    return this.expressions.map(o => o.toHumanDescription()).join(', ');\n  }\n}\n"]}