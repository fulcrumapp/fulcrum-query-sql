{"version":3,"sources":["../src/operator.js"],"names":["OperatorType","Empty","name","label","NotEmpty","Equal","NotEqual","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Between","NotBetween","In","NotIn","TextContain","TextNotContain","TextStartsWith","TextEndsWith","TextEqual","TextNotEqual","TextMatch","TextNotMatch","DateEqual","DateNotEqual","DateAfter","DateOnOrAfter","DateBefore","DateOnOrBefore","DateToday","DateYesterday","DateTomorrow","DateLast7Days","DateLast30Days","DateLast90Days","DateLastMonth","DateLastYear","DateNextWeek","DateNextMonth","DateNextYear","DateCurrentCalendarWeek","DateCurrentCalendarMonth","DateCurrentCalendarYear","DatePreviousCalendarWeek","DatePreviousCalendarMonth","DatePreviousCalendarYear","DateNextCalendarWeek","DateNextCalendarMonth","DateNextCalendarYear","DateDaysFromNow","DateWeeksFromNow","DateMonthsFromNow","DateYearsFromNow","DateDaysAgo","DateWeeksAgo","DateMonthsAgo","DateYearsAgo","DateBetween","DateNotBetween","ArrayAnyOf","ArrayAllOf","ArrayNoneOf","ArrayEqual","Search","OperatorsByValue","Object","keys","key","TEXTUAL_OPERATORS","DATE_OPERATORS","DYNAMIC_DATE_OPERATORS","FRIENDLY_DATE_OPERATORS","NUMERIC_OPERATORS","ARRAY_OPERATORS","GEOSPATIAL_OPERATORS","MEDIA_OPERATORS","NO_VALUE_OPERATORS","SYSTEM_COLUMNS","_record_id","_project_id","_assigned_to_id","_status","_latitude","_longitude","_created_at","_updated_at","_version","_created_by_id","_updated_by_id","_server_created_at","_server_updated_at","_geometry","_altitude","_speed","_course","_horizontal_accuracy","_vertical_accuracy","_changeset_id","_title","_created_latitude","_created_longitude","_created_geometry","_created_altitude","_created_horizontal_accuracy","_updated_latitude","_updated_longitude","_updated_geometry","_updated_altitude","_updated_horizontal_accuracy","_created_duration","_updated_duration","_edited_duration","isValueRequired","operator","find","o","isDateOperator","availableOperatorsForColumn","column","operators","id","element","isTextElement","isNumeric","push","apply","isCalculatedElement","display","isNumber","isCurrency","isDate","isDateElement","isChoiceElement","multiple","isYesNoElement","isClassificationElement","isRecordLinkElement","isStatusElement","isPhotoElement","isVideoElement","isAudioElement","isSignatureElement","isAttachmentElement","isSQL","isArray","length","calculateDateRange","value","now","Date","clone","startOf","date1","date2","range","start","end","endOf","subtract","add"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport const OperatorType = {\n  Empty: {\n    name: 'is_empty',\n    label: 'Is blank'\n  },\n\n  NotEmpty: {\n    name: 'is_not_empty',\n    label: 'Is not blank'\n  },\n\n  Equal: {\n    name: 'equal',\n    label: 'Equals'\n  },\n\n  NotEqual: {\n    name: 'not_equal',\n    label: 'Does not equal'\n  },\n\n  GreaterThan: {\n    name: 'greater_than',\n    label: 'Greater than'\n  },\n\n  GreaterThanOrEqual: {\n    name: 'greater_than_or_equal',\n    label: 'Greater than or equal to'\n  },\n\n  LessThan: {\n    name: 'less_than',\n    label: 'Less than'\n  },\n\n  LessThanOrEqual: {\n    name: 'less_than_or_equal',\n    label: 'Less than or equal to'\n  },\n\n  Between: {\n    name: 'between',\n    label: 'Between'\n  },\n\n  NotBetween: {\n    name: 'not_between',\n    label: 'Not between'\n  },\n\n  In: {\n    name: 'in',\n    label: 'One of'\n  },\n\n  NotIn: {\n    name: 'not_in',\n    label: 'Not one of'\n  },\n\n  TextContain: {\n    name: 'text_contain',\n    label: 'Contains'\n  },\n\n  TextNotContain: {\n    name: 'text_not_contain',\n    label: 'Does not contain'\n  },\n\n  TextStartsWith: {\n    name: 'text_starts_with',\n    label: 'Starts with'\n  },\n\n  TextEndsWith: {\n    name: 'text_ends_with',\n    label: 'Ends with'\n  },\n\n  TextEqual: {\n    name: 'text_equal',\n    label: 'Equals'\n  },\n\n  TextNotEqual: {\n    name: 'text_not_equal',\n    label: 'Does not equal'\n  },\n\n  TextMatch: {\n    name: 'text_match',\n    label: 'Matches regex'\n  },\n\n  TextNotMatch: {\n    name: 'text_not_match',\n    label: 'Does not match regex'\n  },\n\n  DateEqual: {\n    name: 'date_equal',\n    label: 'Equals'\n  },\n\n  DateNotEqual: {\n    name: 'date_not_equal',\n    label: 'Does not equal'\n  },\n\n  DateAfter: {\n    name: 'date_after',\n    label: 'After'\n  },\n\n  DateOnOrAfter: {\n    name: 'date_on_or_after',\n    label: 'On or After'\n  },\n\n  DateBefore: {\n    name: 'date_before',\n    label: 'Before'\n  },\n\n  DateOnOrBefore: {\n    name: 'date_on_or_before',\n    label: 'On or Before'\n  },\n\n  DateToday: {\n    name: 'date_today',\n    label: 'Today'\n  },\n\n  DateYesterday: {\n    name: 'date_yesterday',\n    label: 'Yesterday'\n  },\n\n  DateTomorrow: {\n    name: 'date_tomorrow',\n    label: 'Tomorrow'\n  },\n\n  DateLast7Days: {\n    name: 'date_last_7_days',\n    label: 'Last 7 days'\n  },\n\n  DateLast30Days: {\n    name: 'date_last_30_days',\n    label: 'Last 30 days'\n  },\n\n  DateLast90Days: {\n    name: 'date_last_90_days',\n    label: 'Last 90 days'\n  },\n\n  DateLastMonth: {\n    name: 'date_last_month',\n    label: '1 Month Ago'\n  },\n\n  DateLastYear: {\n    name: 'date_last_year',\n    label: '1 Year Ago'\n  },\n\n  DateNextWeek: {\n    name: 'date_next_week',\n    label: '1 Week from Now'\n  },\n\n  DateNextMonth: {\n    name: 'date_next_month',\n    label: '1 Month from Now'\n  },\n\n  DateNextYear: {\n    name: 'date_next_year',\n    label: '1 Year from Now'\n  },\n\n  DateCurrentCalendarWeek: {\n    name: 'date_current_calendar_week',\n    label: 'This Week'\n  },\n\n  DateCurrentCalendarMonth: {\n    name: 'date_current_calendar_month',\n    label: 'This Month'\n  },\n\n  DateCurrentCalendarYear: {\n    name: 'date_current_calendar_year',\n    label: 'This Year'\n  },\n\n  DatePreviousCalendarWeek: {\n    name: 'date_previous_calendar_week',\n    label: 'Last Week'\n  },\n\n  DatePreviousCalendarMonth: {\n    name: 'date_previous_calendar_month',\n    label: 'Last Month'\n  },\n\n  DatePreviousCalendarYear: {\n    name: 'date_previous_calendar_year',\n    label: 'Last Year'\n  },\n\n  DateNextCalendarWeek: {\n    name: 'date_next_calendar_week',\n    label: 'Next Week'\n  },\n\n  DateNextCalendarMonth: {\n    name: 'date_next_calendar_month',\n    label: 'Next Month'\n  },\n\n  DateNextCalendarYear: {\n    name: 'date_next_calendar_year',\n    label: 'Next Year'\n  },\n\n  DateDaysFromNow: {\n    name: 'date_days_from_now',\n    label: 'Days from Now'\n  },\n\n  DateWeeksFromNow: {\n    name: 'date_weeks_from_now',\n    label: 'Weeks from Now'\n  },\n\n  DateMonthsFromNow: {\n    name: 'date_months_from_now',\n    label: 'Months from now'\n  },\n\n  DateYearsFromNow: {\n    name: 'date_weeks_from_now',\n    label: 'Years from now'\n  },\n\n  DateDaysAgo: {\n    name: 'date_days_ago',\n    label: 'Days ago'\n  },\n\n  DateWeeksAgo: {\n    name: 'date_weeks_ago',\n    label: 'Weeks ago'\n  },\n\n  DateMonthsAgo: {\n    name: 'date_months_ago',\n    label: 'Months ago'\n  },\n\n  DateYearsAgo: {\n    name: 'date_years_ago',\n    label: 'Years ago'\n  },\n\n  DateBetween: {\n    name: 'date_between',\n    label: 'Specific Range'\n  },\n\n  DateNotBetween: {\n    name: 'date_not_between',\n    label: 'Not Between'\n  },\n\n  ArrayAnyOf: {\n    name: 'array_any_of',\n    label: 'Any of'\n  },\n\n  ArrayAllOf: {\n    name: 'array_all_of',\n    label: 'All of'\n  },\n\n  ArrayNoneOf: {\n    name: 'array_none_of',\n    label: 'None of'\n  },\n\n  ArrayEqual: {\n    name: 'array_equal',\n    label: 'Equals'\n  },\n\n  Search: {\n    name: 'search',\n    label: 'Search'\n  }\n};\n\nexport const OperatorsByValue = {};\n\nfor (const key of Object.keys(OperatorType)) {\n  OperatorsByValue[OperatorType[key].name] = OperatorType[key];\n}\n\nconst TEXTUAL_OPERATORS = [\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.TextContain,\n  OperatorType.TextNotContain,\n  OperatorType.TextStartsWith,\n  OperatorType.TextEndsWith,\n  OperatorType.TextEqual,\n  OperatorType.TextNotEqual,\n  OperatorType.TextMatch,\n  OperatorType.TextNotMatch\n];\n\nconst DATE_OPERATORS = [\n  OperatorType.DateEqual,\n  OperatorType.DateOnOrAfter,\n  OperatorType.DateAfter,\n  OperatorType.DateOnOrBefore,\n  OperatorType.DateBefore,\n  OperatorType.DateBetween,\n  OperatorType.DateNotBetween,\n  OperatorType.DateNotEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateWeeksFromNow,\n  OperatorType.DateMonthsFromNow,\n  OperatorType.DateYearsFromNow,\n  OperatorType.DateDaysAgo,\n  OperatorType.DateWeeksAgo,\n  OperatorType.DateMonthsAgo,\n  OperatorType.DateYearsAgo\n];\n\nexport const DYNAMIC_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateWeeksFromNow,\n  OperatorType.DateMonthsFromNow,\n  OperatorType.DateYearsFromNow,\n  OperatorType.DateDaysAgo,\n  OperatorType.DateWeeksAgo,\n  OperatorType.DateMonthsAgo,\n  OperatorType.DateYearsAgo\n];\n\nexport const FRIENDLY_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DateBetween\n];\n\nconst NUMERIC_OPERATORS = [\n  OperatorType.Equal,\n  OperatorType.NotEqual,\n  OperatorType.GreaterThan,\n  OperatorType.GreaterThanOrEqual,\n  OperatorType.LessThan,\n  OperatorType.LessThanOrEqual,\n  // OperatorType.Between,\n  // OperatorType.NotBetween,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn\n];\n\nconst ARRAY_OPERATORS = [\n  OperatorType.ArrayAnyOf,\n  OperatorType.ArrayAllOf,\n  OperatorType.ArrayEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst GEOSPATIAL_OPERATORS = [\n];\n\nconst MEDIA_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst NO_VALUE_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear\n];\n\nconst SYSTEM_COLUMNS = {\n  _record_id: TEXTUAL_OPERATORS,\n  _project_id: TEXTUAL_OPERATORS,\n  _assigned_to_id: TEXTUAL_OPERATORS,\n  _status: TEXTUAL_OPERATORS,\n  _latitude: NUMERIC_OPERATORS,\n  _longitude: NUMERIC_OPERATORS,\n  _created_at: DATE_OPERATORS,\n  _updated_at: DATE_OPERATORS,\n  _version: NUMERIC_OPERATORS,\n  _created_by_id: TEXTUAL_OPERATORS,\n  _updated_by_id: TEXTUAL_OPERATORS,\n  _server_created_at: DATE_OPERATORS,\n  _server_updated_at: DATE_OPERATORS,\n  _geometry: GEOSPATIAL_OPERATORS,\n  _altitude: NUMERIC_OPERATORS,\n  _speed: NUMERIC_OPERATORS,\n  _course: NUMERIC_OPERATORS,\n  _horizontal_accuracy: NUMERIC_OPERATORS,\n  _vertical_accuracy: NUMERIC_OPERATORS,\n  _changeset_id: TEXTUAL_OPERATORS,\n  _title: TEXTUAL_OPERATORS,\n  _created_latitude: NUMERIC_OPERATORS,\n  _created_longitude: NUMERIC_OPERATORS,\n  _created_geometry: GEOSPATIAL_OPERATORS,\n  _created_altitude: NUMERIC_OPERATORS,\n  _created_horizontal_accuracy: NUMERIC_OPERATORS,\n  _updated_latitude: NUMERIC_OPERATORS,\n  _updated_longitude: NUMERIC_OPERATORS,\n  _updated_geometry: GEOSPATIAL_OPERATORS,\n  _updated_altitude: NUMERIC_OPERATORS,\n  _updated_horizontal_accuracy: NUMERIC_OPERATORS,\n  _created_duration: NUMERIC_OPERATORS,\n  _updated_duration: NUMERIC_OPERATORS,\n  _edited_duration: NUMERIC_OPERATORS\n};\n\nexport function isValueRequired(operator) {\n  return !NO_VALUE_OPERATORS.find(o => o.name === operator);\n}\n\nexport function isDateOperator(operator) {\n  return DATE_OPERATORS.find(o => o.name === operator);\n}\n\nexport function availableOperatorsForColumn(column) {\n  const operators = [];\n\n  if (column == null) {\n    return operators;\n  }\n\n  if (SYSTEM_COLUMNS[column.id]) {\n    return SYSTEM_COLUMNS[column.id];\n  }\n\n  const element = column && column.element;\n\n  if (element) {\n    if (element.isTextElement) {\n      if (element.isNumeric) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isCalculatedElement) {\n      if (element.display.isNumber || element.display.isCurrency) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else if (element.display.isDate) {\n        operators.push.apply(operators, DATE_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isDateElement) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    }\n\n    if (element.isChoiceElement) {\n      if (element.multiple) {\n        operators.push.apply(operators, ARRAY_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isYesNoElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isClassificationElement || element.isRecordLinkElement) {\n      operators.push.apply(operators, ARRAY_OPERATORS);\n    }\n\n    if (element.isStatusElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isPhotoElement ||\n          element.isVideoElement ||\n          element.isAudioElement ||\n          element.isSignatureElement ||\n          element.isAttachmentElement) {\n      operators.push.apply(operators, MEDIA_OPERATORS);\n    }\n  } else if (column.isSQL) {\n    // custom types\n    if (column.isNumber) {\n      operators.push.apply(operators, NUMERIC_OPERATORS);\n    } else if (column.isArray) {\n      operators.push.apply(operators, ARRAY_OPERATORS);\n    } else if (column.isDate) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    } else {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n  }\n\n  if (operators.length === 0) {\n    operators.push.apply(operators, TEXTUAL_OPERATORS);\n  }\n\n  return operators;\n}\n\nexport function calculateDateRange(operator, value, now) {\n  now = moment(now || new Date()).clone().startOf('day');\n\n  const date1 = now.clone();\n  const date2 = now.clone();\n\n  const range = (start, end) => {\n    return [ start.clone(), (end || start).clone().endOf('day') ];\n  };\n\n  switch (operator) {\n    case OperatorType.DateToday.name:\n      return range(date1);\n\n    case OperatorType.DateYesterday.name:\n      return range(date1.subtract(1, 'days'));\n\n    case OperatorType.DateTomorrow.name:\n      return range(date1.add(1, 'days'));\n\n    case OperatorType.DateLast7Days.name:\n      return range(date1.subtract(7, 'days'), date2);\n\n    case OperatorType.DateLast30Days.name:\n      return range(date1.subtract(30, 'days'), date2);\n\n    case OperatorType.DateLast90Days.name:\n      return range(date1.subtract(90, 'days'), date2);\n\n    case OperatorType.DateLastMonth.name:\n      return range(date1.subtract(1, 'month'), date2);\n\n    case OperatorType.DateLastYear.name:\n      return range(date1.subtract(1, 'year'), date2);\n\n    case OperatorType.DateNextWeek.name:\n      return range(date1, date2.add(1, 'week'));\n\n    case OperatorType.DateNextMonth.name:\n      return range(date1, date2.add(1, 'month'));\n\n    case OperatorType.DateNextYear.name:\n      return range(date1, date2.add(1, 'year'));\n\n    case OperatorType.DateCurrentCalendarWeek.name:\n      return range(date1.startOf('week'), date2.endOf('week'));\n\n    case OperatorType.DatePreviousCalendarWeek.name:\n      return range(date1.subtract(1, 'week').startOf('week'),\n                   date2.subtract(1, 'week').endOf('week'));\n\n    case OperatorType.DateNextCalendarWeek.name:\n      return range(date1.add(1, 'week').startOf('week'),\n                   date2.add(1, 'week').endOf('week'));\n\n    case OperatorType.DateCurrentCalendarMonth.name:\n      return range(date1.startOf('month'), date2.endOf('month'));\n\n    case OperatorType.DatePreviousCalendarMonth.name:\n      return range(date1.subtract(1, 'month').startOf('month'),\n                   date2.subtract(1, 'month').endOf('month'));\n\n    case OperatorType.DateNextCalendarMonth.name:\n      return range(date1.add(1, 'month').startOf('month'),\n                   date2.add(1, 'month').endOf('month'));\n\n    case OperatorType.DateCurrentCalendarYear.name:\n      return range(date1.startOf('year'), date2.endOf('year'));\n\n    case OperatorType.DatePreviousCalendarYear.name:\n      return range(date1.subtract(1, 'year').startOf('year'),\n                   date2.subtract(1, 'year').endOf('year'));\n\n    case OperatorType.DateNextCalendarYear.name:\n      return range(date1.add(1, 'year').startOf('year'),\n                   date2.add(1, 'year').endOf('year'));\n\n    case OperatorType.DateDaysFromNow.name:\n      return value && range(date1, date2.add(+value, 'days'));\n\n    case OperatorType.DateWeeksFromNow.name:\n      return value && range(date1, date2.add(+value, 'weeks'));\n\n    case OperatorType.DateMonthsFromNow.name:\n      return value && range(date1, date2.add(+value, 'months'));\n\n    case OperatorType.DateYearsFromNow.name:\n      return value && range(date1, date2.add(+value, 'years'));\n\n    case OperatorType.DateDaysAgo.name:\n      return value && range(date1.subtract(+value, 'days'), date2);\n\n    case OperatorType.DateWeeksAgo.name:\n      return value && range(date1.subtract(+value, 'weeks'), date2);\n\n    case OperatorType.DateMonthsAgo.name:\n      return value && range(date1.subtract(+value, 'months'), date2);\n\n    case OperatorType.DateYearsAgo.name:\n      return value && range(date1.subtract(+value, 'years'), date2);\n\n    case OperatorType.DateBetween.name:\n      return value && range(value[0] && moment(value[0]), value[1] && moment(value[1]));\n\n    default:\n      return null;\n  }\n}\n"],"file":"operator.js"}